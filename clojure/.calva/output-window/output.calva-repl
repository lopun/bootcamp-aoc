; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.0.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; Syntax error compiling at (src/aoc2018_3.clj:57:1).
; Unable to resolve symbol: defn in this context
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
nil
clj꞉aoc2018_3꞉> 
#'aoc2018_3/part1-solution
clj꞉aoc2018_3꞉> 
({:id 1,
  :cart
  ((49 222)
   (49 223)
   (49 224)
   (49 225)
   (49 226)
   (49 227)
   (49 228)
   (49 229)
   (49 230)
   (49 231)
   (49 232)
   (49 233)
   (49 234)
   (49 235)
   (49 236)
   (49 237)
   (49 238)
   (49 239)
   (49 240)
   (49 241)
   (50 222)
   (50 223)
   (50 224)
   (50 225)
   (50 226)
   (50 227)
   (50 228)
   (50 229)
   (50 230)
   (50 231)
   (50 232)
   (50 233)
   (50 234)
   (50 235)
   (50 236)
   (50 237)
   (50 238)
   (50 239)
   (50 240)
   (50 241)
   (51 222)
   (51 223)
   (51 224)
   (51 225)
   (51 226)
   (51 227)
   (51 228)
   (51 229)
   (51 230)
   (51 231)
   ...)}
 {:id 2,
  :cart
  ((162 876)
   (162 877)
   (162 878)
   (162 879)
   (162 880)
   (162 881)
   (162 882)
   (162 883)
   (162 884)
   (162 885)
   (162 886)
   (162 887)
   (162 888)
   (162 889)
   (162 890)
   (162 891)
   (162 892)
   (162 893)
   (162 894)
   (162 895)
   (162 896)
   (162 897)
   (162 898)
   (162 899)
   (162 900)
   (162 901)
   (162 902)
   (162 903)
   (162 904)
   (163 876)
   (163 877)
   (163 878)
   (163 879)
   (163 880)
   (163 881)
   (163 882)
   (163 883)
   (163 884)
   (163 885)
   (163 886)
   (163 887)
   (163 888)
   (163 889)
   (163 890)
   (163 891)
   (163 892)
   (163 893)
   (163 894)
   (163 895)
   (163 896)
   ...)}
 {:id 3,
  :cart
  ((28 156)
   (28 157)
   (28 158)
   (28 159)
   (28 160)
   (28 161)
   (28 162)
   (28 163)
   (28 164)
   (28 165)
   (28 166)
   (28 167)
   (28 168)
   (28 169)
   (28 170)
   (28 171)
   (28 172)
   (28 173)
   (29 156)
   (29 157)
   (29 158)
   (29 159)
   (29 160)
   (29 161)
   (29 162)
   (29 163)
   (29 164)
   (29 165)
   (29 166)
   (29 167)
   (29 168)
   (29 169)
   (29 170)
   (29 171)
   (29 172)
   (29 173)
   (30 156)
   (30 157)
   (30 158)
   (30 159)
   (30 160)
   (30 161)
   (30 162)
   (30 163)
   (30 164)
   (30 165)
   (30 166)
   (30 167)
   (30 168)
   (30 169)
   ...)}
 {:id 4,
  :cart
  ((673 337)
   (673 338)
   (673 339)
   (673 340)
   (673 341)
   (673 342)
   (673 343)
   (673 344)
   (673 345)
   (673 346)
   (673 347)
   (673 348)
   (673 349)
   (673 350)
   (673 351)
   (673 352)
   (673 353)
   (673 354)
   (673 355)
   (673 356)
   (673 357)
   (673 358)
   (673 359)
   (673 360)
   (674 337)
   (674 338)
   (674 339)
   (674 340)
   (674 341)
   (674 342)
   (674 343)
   (674 344)
   (674 345)
   (674 346)
   (674 347)
   (674 348)
   (674 349)
   (674 350)
   (674 351)
   (674 352)
   (674 353)
   (674 354)
   (674 355)
   (674 356)
   (674 357)
   (674 358)
   (674 359)
   (674 360)
   (675 337)
   (675 338)
   ...)}
 {:id 5,
  :cart
  ((213 834)
   (213 835)
   (213 836)
   (213 837)
   (213 838)
   (213 839)
   (213 840)
   (213 841)
   (213 842)
   (213 843)
   (213 844)
   (213 845)
   (213 846)
   (213 847)
   (213 848)
   (213 849)
   (213 850)
   (213 851)
   (213 852)
   (213 853)
   (213 854)
   (213 855)
   (213 856)
   (214 834)
   (214 835)
   (214 836)
   (214 837)
   (214 838)
   (214 839)
   (214 840)
   (214 841)
   (214 842)
   (214 843)
   (214 844)
   (214 845)
   (214 846)
   (214 847)
   (214 848)
   (214 849)
   (214 850)
   (214 851)
   (214 852)
   (214 853)
   (214 854)
   (214 855)
   (214 856)
   (215 834)
   (215 835)
   (215 836)
   (215 837)
   ...)}
 {:id 6,
  :cart
  ((675 523)
   (675 524)
   (675 525)
   (675 526)
   (675 527)
   (675 528)
   (675 529)
   (675 530)
   (675 531)
   (675 532)
   (675 533)
   (675 534)
   (675 535)
   (676 523)
   (676 524)
   (676 525)
   (676 526)
   (676 527)
   (676 528)
   (676 529)
   (676 530)
   (676 531)
   (676 532)
   (676 533)
   (676 534)
   (676 535)
   (677 523)
   (677 524)
   (677 525)
   (677 526)
   (677 527)
   (677 528)
   (677 529)
   (677 530)
   (677 531)
   (677 532)
   (677 533)
   (677 534)
   (677 535)
   (678 523)
   (678 524)
   (678 525)
   (678 526)
   (678 527)
   (678 528)
   (678 529)
   (678 530)
   (678 531)
   (678 532)
   (678 533)
   ...)}
 {:id 7,
  :cart
  ((97 7)
   (97 8)
   (97 9)
   (97 10)
   (97 11)
   (97 12)
   (97 13)
   (97 14)
   (97 15)
   (97 16)
   (97 17)
   (97 18)
   (97 19)
   (97 20)
   (97 21)
   (97 22)
   (97 23)
   (97 24)
   (97 25)
   (97 26)
   (97 27)
   (97 28)
   (97 29)
   (97 30)
   (97 31)
   (97 32)
   (97 33)
   (98 7)
   (98 8)
   (98 9)
   (98 10)
   (98 11)
   (98 12)
   (98 13)
   (98 14)
   (98 15)
   (98 16)
   (98 17)
   (98 18)
   (98 19)
   (98 20)
   (98 21)
   (98 22)
   (98 23)
   (98 24)
   (98 25)
   (98 26)
   (98 27)
   (98 28)
   (98 29)
   ...)}
 {:id 8,
  :cart
  ((92 512)
   (92 513)
   (92 514)
   (92 515)
   (92 516)
   (92 517)
   (92 518)
   (92 519)
   (92 520)
   (92 521)
   (92 522)
   (92 523)
   (92 524)
   (92 525)
   (92 526)
   (92 527)
   (92 528)
   (93 512)
   (93 513)
   (93 514)
   (93 515)
   (93 516)
   (93 517)
   (93 518)
   (93 519)
   (93 520)
   (93 521)
   (93 522)
   (93 523)
   (93 524)
   (93 525)
   (93 526)
   (93 527)
   (93 528)
   (94 512)
   (94 513)
   (94 514)
   (94 515)
   (94 516)
   (94 517)
   (94 518)
   (94 519)
   (94 520)
   (94 521)
   (94 522)
   (94 523)
   (94 524)
   (94 525)
   (94 526)
   (94 527)
   ...)}
 {:id 9,
  :cart
  ((507 525)
   (507 526)
   (507 527)
   (507 528)
   (507 529)
   (507 530)
   (507 531)
   (507 532)
   (507 533)
   (507 534)
   (507 535)
   (507 536)
   (507 537)
   (507 538)
   (507 539)
   (507 540)
   (507 541)
   (507 542)
   (507 543)
   (507 544)
   (508 525)
   (508 526)
   (508 527)
   (508 528)
   (508 529)
   (508 530)
   (508 531)
   (508 532)
   (508 533)
   (508 534)
   (508 535)
   (508 536)
   (508 537)
   (508 538)
   (508 539)
   (508 540)
   (508 541)
   (508 542)
   (508 543)
   (508 544)
   (509 525)
   (509 526)
   (509 527)
   (509 528)
   (509 529)
   (509 530)
   (509 531)
   (509 532)
   (509 533)
   (509 534)
   ...)}
 {:id 10,
  :cart
  ((47 742)
   (47 743)
   (47 744)
   (47 745)
   (47 746)
   (47 747)
   (47 748)
   (47 749)
   (47 750)
   (47 751)
   (47 752)
   (47 753)
   (47 754)
   (47 755)
   (47 756)
   (47 757)
   (47 758)
   (47 759)
   (47 760)
   (47 761)
   (47 762)
   (47 763)
   (47 764)
   (47 765)
   (47 766)
   (48 742)
   (48 743)
   (48 744)
   (48 745)
   (48 746)
   (48 747)
   (48 748)
   (48 749)
   (48 750)
   (48 751)
   (48 752)
   (48 753)
   (48 754)
   (48 755)
   (48 756)
   (48 757)
   (48 758)
   (48 759)
   (48 760)
   (48 761)
   (48 762)
   (48 763)
   (48 764)
   (48 765)
   (48 766)
   ...)}
 {:id 11,
  :cart
  ((154 740)
   (154 741)
   (154 742)
   (154 743)
   (154 744)
   (154 745)
   (154 746)
   (154 747)
   (154 748)
   (154 749)
   (154 750)
   (154 751)
   (154 752)
   (154 753)
   (154 754)
   (154 755)
   (154 756)
   (154 757)
   (154 758)
   (154 759)
   (154 760)
   (154 761)
   (154 762)
   (154 763)
   (154 764)
   (155 740)
   (155 741)
   (155 742)
   (155 743)
   (155 744)
   (155 745)
   (155 746)
   (155 747)
   (155 748)
   (155 749)
   (155 750)
   (155 751)
   (155 752)
   (155 753)
   (155 754)
   (155 755)
   (155 756)
   (155 757)
   (155 758)
   (155 759)
   (155 760)
   (155 761)
   (155 762)
   (155 763)
   (155 764)
   ...)}
 {:id 12,
  :cart
  ((808 793)
   (808 794)
   (808 795)
   (808 796)
   (808 797)
   (808 798)
   (808 799)
   (808 800)
   (808 801)
   (808 802)
   (808 803)
   (808 804)
   (808 805)
   (808 806)
   (808 807)
   (808 808)
   (808 809)
   (808 810)
   (808 811)
   (808 812)
   (808 813)
   (808 814)
   (808 815)
   (808 816)
   (809 793)
   (809 794)
   (809 795)
   (809 796)
   (809 797)
   (809 798)
   (809 799)
   (809 800)
   (809 801)
   (809 802)
   (809 803)
   (809 804)
   (809 805)
   (809 806)
   (809 807)
   (809 808)
   (809 809)
   (809 810)
   (809 811)
   (809 812)
   (809 813)
   (809 814)
   (809 815)
   (809 816)
   (810 793)
   (810 794)
   ...)}
 {:id 13,
  :cart
  ((249 936)
   (249 937)
   (249 938)
   (249 939)
   (249 940)
   (249 941)
   (249 942)
   (249 943)
   (249 944)
   (249 945)
   (249 946)
   (250 936)
   (250 937)
   (250 938)
   (250 939)
   (250 940)
   (250 941)
   (250 942)
   (250 943)
   (250 944)
   (250 945)
   (250 946)
   (251 936)
   (251 937)
   (251 938)
   (251 939)
   (251 940)
   (251 941)
   (251 942)
   (251 943)
   (251 944)
   (251 945)
   (251 946)
   (252 936)
   (252 937)
   (252 938)
   (252 939)
   (252 940)
   (252 941)
   (252 942)
   (252 943)
   (252 944)
   (252 945)
   (252 946)
   (253 936)
   (253 937)
   (253 938)
   (253 939)
   (253 940)
   (253 941)
   ...)}
 {:id 14,
  :cart
  ((93 400)
   (93 401)
   (93 402)
   (93 403)
   (93 404)
   (93 405)
   (93 406)
   (93 407)
   (93 408)
   (94 400)
   (94 401)
   (94 402)
   (94 403)
   (94 404)
   (94 405)
   (94 406)
   (94 407)
   (94 408)
   (95 400)
   (95 401)
   (95 402)
   (95 403)
   (95 404)
   (95 405)
   (95 406)
   (95 407)
   (95 408)
   (96 400)
   (96 401)
   (96 402)
   (96 403)
   (96 404)
   (96 405)
   (96 406)
   (96 407)
   (96 408)
   (97 400)
   (97 401)
   (97 402)
   (97 403)
   (97 404)
   (97 405)
   (97 406)
   (97 407)
   (97 408)
   (98 400)
   (98 401)
   (98 402)
   (98 403)
   (98 404)
   ...)}
 {:id 15,
  :cart
  ((295 894)
   (295 895)
   (295 896)
   (295 897)
   (295 898)
   (295 899)
   (295 900)
   (295 901)
   (295 902)
   (295 903)
   (295 904)
   (295 905)
   (295 906)
   (295 907)
   (295 908)
   (295 909)
   (295 910)
   (295 911)
   (295 912)
   (295 913)
   (295 914)
   (295 915)
   (296 894)
   (296 895)
   (296 896)
   (296 897)
   (296 898)
   (296 899)
   (296 900)
   (296 901)
   (296 902)
   (296 903)
   (296 904)
   (296 905)
   (296 906)
   (296 907)
   (296 908)
   (296 909)
   (296 910)
   (296 911)
   (296 912)
   (296 913)
   (296 914)
   (296 915)
   (297 894)
   (297 895)
   (297 896)
   (297 897)
   (297 898)
   (297 899)
   ...)}
 {:id 16,
  :cart
  ((535 885)
   (535 886)
   (535 887)
   (535 888)
   (535 889)
   (536 885)
   (536 886)
   (536 887)
   (536 888)
   (536 889)
   (537 885)
   (537 886)
   (537 887)
   (537 888)
   (537 889)
   (538 885)
   (538 886)
   (538 887)
   (538 888)
   (538 889)
   (539 885)
   (539 886)
   (539 887)
   (539 888)
   (539 889)
   (540 885)
   (540 886)
   (540 887)
   (540 888)
   (540 889)
   (541 885)
   (541 886)
   (541 887)
   (541 888)
   (541 889)
   (542 885)
   (542 886)
   (542 887)
   (542 888)
   (542 889))}
 {:id 17,
  :cart
  ((878 268)
   (878 269)
   (878 270)
   (878 271)
   (878 272)
   (878 273)
   (878 274)
   (878 275)
   (878 276)
   (878 277)
   (878 278)
   (879 268)
   (879 269)
   (879 270)
   (879 271)
   (879 272)
   (879 273)
   (879 274)
   (879 275)
   (879 276)
   (879 277)
   (879 278)
   (880 268)
   (880 269)
   (880 270)
   (880 271)
   (880 272)
   (880 273)
   (880 274)
   (880 275)
   (880 276)
   (880 277)
   (880 278)
   (881 268)
   (881 269)
   (881 270)
   (881 271)
   (881 272)
   (881 273)
   (881 274)
   (881 275)
   (881 276)
   (881 277)
   (881 278)
   (882 268)
   (882 269)
   (882 270)
   (882 271)
   (882 272)
   (882 273)
   ...)}
 {:id 18,
  :cart
  ((152 685)
   (152 686)
   (152 687)
   (152 688)
   (152 689)
   (152 690)
   (152 691)
   (152 692)
   (152 693)
   (152 694)
   (152 695)
   (152 696)
   (152 697)
   (152 698)
   (152 699)
   (152 700)
   (152 701)
   (152 702)
   (152 703)
   (152 704)
   (152 705)
   (152 706)
   (152 707)
   (152 708)
   (153 685)
   (153 686)
   (153 687)
   (153 688)
   (153 689)
   (153 690)
   (153 691)
   (153 692)
   (153 693)
   (153 694)
   (153 695)
   (153 696)
   (153 697)
   (153 698)
   (153 699)
   (153 700)
   (153 701)
   (153 702)
   (153 703)
   (153 704)
   (153 705)
   (153 706)
   (153 707)
   (153 708)
   (154 685)
   (154 686)
   ...)}
 {:id 19,
  :cart
  ((152 639)
   (152 640)
   (152 641)
   (152 642)
   (152 643)
   (152 644)
   (152 645)
   (152 646)
   (152 647)
   (152 648)
   (152 649)
   (152 650)
   (152 651)
   (152 652)
   (152 653)
   (152 654)
   (152 655)
   (152 656)
   (152 657)
   (152 658)
   (152 659)
   (152 660)
   (152 661)
   (152 662)
   (152 663)
   (152 664)
   (153 639)
   (153 640)
   (153 641)
   (153 642)
   (153 643)
   (153 644)
   (153 645)
   (153 646)
   (153 647)
   (153 648)
   (153 649)
   (153 650)
   (153 651)
   (153 652)
   (153 653)
   (153 654)
   (153 655)
   (153 656)
   (153 657)
   (153 658)
   (153 659)
   (153 660)
   (153 661)
   (153 662)
   ...)}
 {:id 20,
  :cart
  ((905 560)
   (905 561)
   (905 562)
   (905 563)
   (905 564)
   (905 565)
   (905 566)
   (905 567)
   (905 568)
   (905 569)
   (905 570)
   (905 571)
   (905 572)
   (905 573)
   (905 574)
   (905 575)
   (905 576)
   (905 577)
   (905 578)
   (905 579)
   (905 580)
   (905 581)
   (905 582)
   (905 583)
   (905 584)
   (905 585)
   (905 586)
   (906 560)
   (906 561)
   (906 562)
   (906 563)
   (906 564)
   (906 565)
   (906 566)
   (906 567)
   (906 568)
   (906 569)
   (906 570)
   (906 571)
   (906 572)
   (906 573)
   (906 574)
   (906 575)
   (906 576)
   (906 577)
   (906 578)
   (906 579)
   (906 580)
   (906 581)
   (906 582)
   ...)}
 {:id 21,
  :cart
  ((962 104)
   (962 105)
   (962 106)
   (962 107)
   (962 108)
   (962 109)
   (962 110)
   (962 111)
   (962 112)
   (962 113)
   (962 114)
   (962 115)
   (963 104)
   (963 105)
   (963 106)
   (963 107)
   (963 108)
   (963 109)
   (963 110)
   (963 111)
   (963 112)
   (963 113)
   (963 114)
   (963 115)
   (964 104)
   (964 105)
   (964 106)
   (964 107)
   (964 108)
   (964 109)
   (964 110)
   (964 111)
   (964 112)
   (964 113)
   (964 114)
   (964 115)
   (965 104)
   (965 105)
   (965 106)
   (965 107)
   (965 108)
   (965 109)
   (965 110)
   (965 111)
   (965 112)
   (965 113)
   (965 114)
   (965 115)
   (966 104)
   (966 105)
   ...)}
 {:id 22,
  :cart
  ((125 145)
   (125 146)
   (125 147)
   (125 148)
   (125 149)
   (125 150)
   (125 151)
   (125 152)
   (125 153)
   (125 154)
   (125 155)
   (125 156)
   (125 157)
   (125 158)
   (125 159)
   (125 160)
   (125 161)
   (125 162)
   (125 163)
   (125 164)
   (125 165)
   (125 166)
   (126 145)
   (126 146)
   (126 147)
   (126 148)
   (126 149)
   (126 150)
   (126 151)
   (126 152)
   (126 153)
   (126 154)
   (126 155)
   (126 156)
   (126 157)
   (126 158)
   (126 159)
   (126 160)
   (126 161)
   (126 162)
   (126 163)
   (126 164)
   (126 165)
   (126 166)
   (127 145)
   (127 146)
   (127 147)
   (127 148)
   (127 149)
   (127 150)
   ...)}
 {:id 23,
  :cart
  ((260 488)
   (260 489)
   (260 490)
   (260 491)
   (260 492)
   (260 493)
   (260 494)
   (260 495)
   (260 496)
   (260 497)
   (260 498)
   (260 499)
   (260 500)
   (260 501)
   (260 502)
   (260 503)
   (260 504)
   (260 505)
   (260 506)
   (260 507)
   (260 508)
   (261 488)
   (261 489)
   (261 490)
   (261 491)
   (261 492)
   (261 493)
   (261 494)
   (261 495)
   (261 496)
   (261 497)
   (261 498)
   (261 499)
   (261 500)
   (261 501)
   (261 502)
   (261 503)
   (261 504)
   (261 505)
   (261 506)
   (261 507)
   (261 508)
   (262 488)
   (262 489)
   (262 490)
   (262 491)
   (262 492)
   (262 493)
   (262 494)
   (262 495)
   ...)}
 {:id 24,
  :cart
  ((179 815)
   (179 816)
   (179 817)
   (179 818)
   (179 819)
   (179 820)
   (179 821)
   (179 822)
   (179 823)
   (179 824)
   (179 825)
   (179 826)
   (179 827)
   (179 828)
   (179 829)
   (179 830)
   (179 831)
   (179 832)
   (179 833)
   (179 834)
   (179 835)
   (179 836)
   (179 837)
   (179 838)
   (180 815)
   (180 816)
   (180 817)
   (180 818)
   (180 819)
   (180 820)
   (180 821)
   (180 822)
   (180 823)
   (180 824)
   (180 825)
   (180 826)
   (180 827)
   (180 828)
   (180 829)
   (180 830)
   (180 831)
   (180 832)
   (180 833)
   (180 834)
   (180 835)
   (180 836)
   (180 837)
   (180 838)
   (181 815)
   (181 816)
   ...)}
 {:id 25,
  :cart
  ((661 595)
   (661 596)
   (661 597)
   (661 598)
   (661 599)
   (661 600)
   (662 595)
   (662 596)
   (662 597)
   (662 598)
   (662 599)
   (662 600)
   (663 595)
   (663 596)
   (663 597)
   (663 598)
   (663 599)
   (663 600)
   (664 595)
   (664 596)
   (664 597)
   (664 598)
   (664 599)
   (664 600))}
 {:id 26,
  :cart
  ((584 97)
   (584 98)
   (584 99)
   (584 100)
   (584 101)
   (584 102)
   (584 103)
   (584 104)
   (584 105)
   (584 106)
   (584 107)
   (584 108)
   (584 109)
   (584 110)
   (584 111)
   (585 97)
   (585 98)
   (585 99)
   (585 100)
   (585 101)
   (585 102)
   (585 103)
   (585 104)
   (585 105)
   (585 106)
   (585 107)
   (585 108)
   (585 109)
   (585 110)
   (585 111)
   (586 97)
   (586 98)
   (586 99)
   (586 100)
   (586 101)
   (586 102)
   (586 103)
   (586 104)
   (586 105)
   (586 106)
   (586 107)
   (586 108)
   (586 109)
   (586 110)
   (586 111)
   (587 97)
   (587 98)
   (587 99)
   (587 100)
   (587 101)
   ...)}
 {:id 27,
  :cart
  ((869 842)
   (869 843)
   (869 844)
   (869 845)
   (869 846)
   (869 847)
   (869 848)
   (869 849)
   (869 850)
   (869 851)
   (869 852)
   (869 853)
   (869 854)
   (869 855)
   (869 856)
   (869 857)
   (869 858)
   (869 859)
   (869 860)
   (870 842)
   (870 843)
   (870 844)
   (870 845)
   (870 846)
   (870 847)
   (870 848)
   (870 849)
   (870 850)
   (870 851)
   (870 852)
   (870 853)
   (870 854)
   (870 855)
   (870 856)
   (870 857)
   (870 858)
   (870 859)
   (870 860)
   (871 842)
   (871 843)
   (871 844)
   (871 845)
   (871 846)
   (871 847)
   (871 848)
   (871 849)
   (871 850)
   (871 851)
   (871 852)
   (871 853)
   ...)}
 {:id 28,
  :cart
  ((491 825)
   (491 826)
   (491 827)
   (491 828)
   (491 829)
   (491 830)
   (491 831)
   (491 832)
   (491 833)
   (491 834)
   (491 835)
   (491 836)
   (491 837)
   (491 838)
   (491 839)
   (491 840)
   (491 841)
   (491 842)
   (491 843)
   (491 844)
   (491 845)
   (491 846)
   (491 847)
   (491 848)
   (491 849)
   (492 825)
   (492 826)
   (492 827)
   (492 828)
   (492 829)
   (492 830)
   (492 831)
   (492 832)
   (492 833)
   (492 834)
   (492 835)
   (492 836)
   (492 837)
   (492 838)
   (492 839)
   (492 840)
   (492 841)
   (492 842)
   (492 843)
   (492 844)
   (492 845)
   (492 846)
   (492 847)
   (492 848)
   (492 849)
   ...)}
 {:id 29,
  :cart
  ((639 935)
   (639 936)
   (639 937)
   (639 938)
   (639 939)
   (639 940)
   (639 941)
   (639 942)
   (639 943)
   (639 944)
   (639 945)
   (639 946)
   (639 947)
   (639 948)
   (639 949)
   (639 950)
   (639 951)
   (639 952)
   (639 953)
   (639 954)
   (639 955)
   (639 956)
   (639 957)
   (639 958)
   (639 959)
   (639 960)
   (639 961)
   (639 962)
   (640 935)
   (640 936)
   (640 937)
   (640 938)
   (640 939)
   (640 940)
   (640 941)
   (640 942)
   (640 943)
   (640 944)
   (640 945)
   (640 946)
   (640 947)
   (640 948)
   (640 949)
   (640 950)
   (640 951)
   (640 952)
   (640 953)
   (640 954)
   (640 955)
   (640 956)
   ...)}
 {:id 30,
  :cart
  ((583 26)
   (583 27)
   (583 28)
   (583 29)
   (583 30)
   (583 31)
   (583 32)
   (583 33)
   (583 34)
   (583 35)
   (583 36)
   (583 37)
   (583 38)
   (584 26)
   (584 27)
   (584 28)
   (584 29)
   (584 30)
   (584 31)
   (584 32)
   (584 33)
   (584 34)
   (584 35)
   (584 36)
   (584 37)
   (584 38)
   (585 26)
   (585 27)
   (585 28)
   (585 29)
   (585 30)
   (585 31)
   (585 32)
   (585 33)
   (585 34)
   (585 35)
   (585 36)
   (585 37)
   (585 38)
   (586 26)
   (586 27)
   (586 28)
   (586 29)
   (586 30)
   (586 31)
   (586 32)
   (586 33)
   (586 34)
   (586 35)
   (586 36)
   ...)}
 {:id 31,
  :cart
  ((956 264)
   (956 265)
   (956 266)
   (956 267)
   (956 268)
   (956 269)
   (956 270)
   (956 271)
   (956 272)
   (956 273)
   (956 274)
   (956 275)
   (956 276)
   (956 277)
   (956 278)
   (956 279)
   (956 280)
   (957 264)
   (957 265)
   (957 266)
   (957 267)
   (957 268)
   (957 269)
   (957 270)
   (957 271)
   (957 272)
   (957 273)
   (957 274)
   (957 275)
   (957 276)
   (957 277)
   (957 278)
   (957 279)
   (957 280)
   (958 264)
   (958 265)
   (958 266)
   (958 267)
   (958 268)
   (958 269)
   (958 270)
   (958 271)
   (958 272)
   (958 273)
   (958 274)
   (958 275)
   (958 276)
   (958 277)
   (958 278)
   (958 279)
   ...)}
 {:id 32,
  :cart
  ((168 706)
   (168 707)
   (168 708)
   (168 709)
   (168 710)
   (168 711)
   (168 712)
   (168 713)
   (168 714)
   (168 715)
   (168 716)
   (168 717)
   (168 718)
   (168 719)
   (168 720)
   (168 721)
   (168 722)
   (168 723)
   (168 724)
   (168 725)
   (168 726)
   (169 706)
   (169 707)
   (169 708)
   (169 709)
   (169 710)
   (169 711)
   (169 712)
   (169 713)
   (169 714)
   (169 715)
   (169 716)
   (169 717)
   (169 718)
   (169 719)
   (169 720)
   (169 721)
   (169 722)
   (169 723)
   (169 724)
   (169 725)
   (169 726)
   (170 706)
   (170 707)
   (170 708)
   (170 709)
   (170 710)
   (170 711)
   (170 712)
   (170 713)
   ...)}
 {:id 33,
  :cart
  ((10 81)
   (10 82)
   (10 83)
   (10 84)
   (10 85)
   (10 86)
   (10 87)
   (10 88)
   (10 89)
   (10 90)
   (10 91)
   (10 92)
   (10 93)
   (10 94)
   (10 95)
   (10 96)
   (10 97)
   (10 98)
   (11 81)
   (11 82)
   (11 83)
   (11 84)
   (11 85)
   (11 86)
   (11 87)
   (11 88)
   (11 89)
   (11 90)
   (11 91)
   (11 92)
   (11 93)
   (11 94)
   (11 95)
   (11 96)
   (11 97)
   (11 98)
   (12 81)
   (12 82)
   (12 83)
   (12 84)
   (12 85)
   (12 86)
   (12 87)
   (12 88)
   (12 89)
   (12 90)
   (12 91)
   (12 92)
   (12 93)
   (12 94)
   ...)}
 {:id 34,
  :cart
  ((751 214)
   (751 215)
   (751 216)
   (751 217)
   (751 218)
   (751 219)
   (751 220)
   (751 221)
   (751 222)
   (751 223)
   (751 224)
   (751 225)
   (751 226)
   (751 227)
   (751 228)
   (751 229)
   (751 230)
   (751 231)
   (751 232)
   (751 233)
   (751 234)
   (752 214)
   (752 215)
   (752 216)
   (752 217)
   (752 218)
   (752 219)
   (752 220)
   (752 221)
   (752 222)
   (752 223)
   (752 224)
   (752 225)
   (752 226)
   (752 227)
   (752 228)
   (752 229)
   (752 230)
   (752 231)
   (752 232)
   (752 233)
   (752 234)
   (753 214)
   (753 215)
   (753 216)
   (753 217)
   (753 218)
   (753 219)
   (753 220)
   (753 221)
   ...)}
 {:id 35,
  :cart
  ((830 200)
   (830 201)
   (830 202)
   (830 203)
   (830 204)
   (830 205)
   (830 206)
   (830 207)
   (830 208)
   (830 209)
   (830 210)
   (830 211)
   (830 212)
   (830 213)
   (830 214)
   (830 215)
   (830 216)
   (830 217)
   (830 218)
   (830 219)
   (831 200)
   (831 201)
   (831 202)
   (831 203)
   (831 204)
   (831 205)
   (831 206)
   (831 207)
   (831 208)
   (831 209)
   (831 210)
   (831 211)
   (831 212)
   (831 213)
   (831 214)
   (831 215)
   (831 216)
   (831 217)
   (831 218)
   (831 219)
   (832 200)
   (832 201)
   (832 202)
   (832 203)
   (832 204)
   (832 205)
   (832 206)
   (832 207)
   (832 208)
   (832 209)
   ...)}
 {:id 36,
  :cart
  ((587 580)
   (587 581)
   (587 582)
   (587 583)
   (587 584)
   (587 585)
   (587 586)
   (587 587)
   (587 588)
   (587 589)
   (587 590)
   (587 591)
   (587 592)
   (587 593)
   (587 594)
   (587 595)
   (587 596)
   (587 597)
   (587 598)
   (587 599)
   (588 580)
   (588 581)
   (588 582)
   (588 583)
   (588 584)
   (588 585)
   (588 586)
   (588 587)
   (588 588)
   (588 589)
   (588 590)
   (588 591)
   (588 592)
   (588 593)
   (588 594)
   (588 595)
   (588 596)
   (588 597)
   (588 598)
   (588 599)
   (589 580)
   (589 581)
   (589 582)
   (589 583)
   (589 584)
   (589 585)
   (589 586)
   (589 587)
   (589 588)
   (589 589)
   ...)}
 {:id 37,
  :cart
  ((749 587)
   (749 588)
   (749 589)
   (749 590)
   (749 591)
   (749 592)
   (749 593)
   (749 594)
   (749 595)
   (749 596)
   (749 597)
   (749 598)
   (749 599)
   (750 587)
   (750 588)
   (750 589)
   (750 590)
   (750 591)
   (750 592)
   (750 593)
   (750 594)
   (750 595)
   (750 596)
   (750 597)
   (750 598)
   (750 599)
   (751 587)
   (751 588)
   (751 589)
   (751 590)
   (751 591)
   (751 592)
   (751 593)
   (751 594)
   (751 595)
   (751 596)
   (751 597)
   (751 598)
   (751 599)
   (752 587)
   (752 588)
   (752 589)
   (752 590)
   (752 591)
   (752 592)
   (752 593)
   (752 594)
   (752 595)
   (752 596)
   (752 597)
   ...)}
 {:id 38,
  :cart
  ((546 376)
   (546 377)
   (546 378)
   (546 379)
   (546 380)
   (546 381)
   (546 382)
   (546 383)
   (546 384)
   (546 385)
   (546 386)
   (546 387)
   (546 388)
   (546 389)
   (546 390)
   (546 391)
   (546 392)
   (546 393)
   (546 394)
   (546 395)
   (546 396)
   (546 397)
   (546 398)
   (546 399)
   (546 400)
   (547 376)
   (547 377)
   (547 378)
   (547 379)
   (547 380)
   (547 381)
   (547 382)
   (547 383)
   (547 384)
   (547 385)
   (547 386)
   (547 387)
   (547 388)
   (547 389)
   (547 390)
   (547 391)
   (547 392)
   (547 393)
   (547 394)
   (547 395)
   (547 396)
   (547 397)
   (547 398)
   (547 399)
   (547 400)
   ...)}
 {:id 39,
  :cart
  ((222 945)
   (222 946)
   (222 947)
   (222 948)
   (222 949)
   (222 950)
   (222 951)
   (222 952)
   (222 953)
   (222 954)
   (222 955)
   (222 956)
   (222 957)
   (222 958)
   (222 959)
   (222 960)
   (222 961)
   (222 962)
   (222 963)
   (222 964)
   (222 965)
   (222 966)
   (222 967)
   (222 968)
   (222 969)
   (222 970)
   (222 971)
   (222 972)
   (223 945)
   (223 946)
   (223 947)
   (223 948)
   (223 949)
   (223 950)
   (223 951)
   (223 952)
   (223 953)
   (223 954)
   (223 955)
   (223 956)
   (223 957)
   (223 958)
   (223 959)
   (223 960)
   (223 961)
   (223 962)
   (223 963)
   (223 964)
   (223 965)
   (223 966)
   ...)}
 {:id 40,
  :cart
  ((43 937)
   (43 938)
   (43 939)
   (43 940)
   (43 941)
   (43 942)
   (43 943)
   (43 944)
   (43 945)
   (43 946)
   (43 947)
   (43 948)
   (43 949)
   (43 950)
   (43 951)
   (43 952)
   (43 953)
   (43 954)
   (43 955)
   (43 956)
   (43 957)
   (43 958)
   (43 959)
   (43 960)
   (43 961)
   (43 962)
   (43 963)
   (44 937)
   (44 938)
   (44 939)
   (44 940)
   (44 941)
   (44 942)
   (44 943)
   (44 944)
   (44 945)
   (44 946)
   (44 947)
   (44 948)
   (44 949)
   (44 950)
   (44 951)
   (44 952)
   (44 953)
   (44 954)
   (44 955)
   (44 956)
   (44 957)
   (44 958)
   (44 959)
   ...)}
 {:id 41,
  :cart
  ((53 108)
   (53 109)
   (53 110)
   (53 111)
   (53 112)
   (53 113)
   (53 114)
   (53 115)
   (53 116)
   (53 117)
   (53 118)
   (53 119)
   (53 120)
   (53 121)
   (53 122)
   (53 123)
   (53 124)
   (53 125)
   (53 126)
   (53 127)
   (53 128)
   (54 108)
   (54 109)
   (54 110)
   (54 111)
   (54 112)
   (54 113)
   (54 114)
   (54 115)
   (54 116)
   (54 117)
   (54 118)
   (54 119)
   (54 120)
   (54 121)
   (54 122)
   (54 123)
   (54 124)
   (54 125)
   (54 126)
   (54 127)
   (54 128)
   (55 108)
   (55 109)
   (55 110)
   (55 111)
   (55 112)
   (55 113)
   (55 114)
   (55 115)
   ...)}
 {:id 42,
  :cart
  ((669 894)
   (669 895)
   (669 896)
   (669 897)
   (669 898)
   (669 899)
   (669 900)
   (669 901)
   (669 902)
   (669 903)
   (669 904)
   (669 905)
   (669 906)
   (669 907)
   (669 908)
   (669 909)
   (669 910)
   (669 911)
   (669 912)
   (669 913)
   (669 914)
   (669 915)
   (669 916)
   (669 917)
   (669 918)
   (669 919)
   (669 920)
   (669 921)
   (670 894)
   (670 895)
   (670 896)
   (670 897)
   (670 898)
   (670 899)
   (670 900)
   (670 901)
   (670 902)
   (670 903)
   (670 904)
   (670 905)
   (670 906)
   (670 907)
   (670 908)
   (670 909)
   (670 910)
   (670 911)
   (670 912)
   (670 913)
   (670 914)
   (670 915)
   ...)}
 {:id 43,
  :cart
  ((598 390)
   (598 391)
   (598 392)
   (598 393)
   (598 394)
   (598 395)
   (598 396)
   (598 397)
   (598 398)
   (598 399)
   (598 400)
   (598 401)
   (598 402)
   (598 403)
   (598 404)
   (598 405)
   (598 406)
   (598 407)
   (598 408)
   (598 409)
   (598 410)
   (598 411)
   (598 412)
   (598 413)
   (598 414)
   (599 390)
   (599 391)
   (599 392)
   (599 393)
   (599 394)
   (599 395)
   (599 396)
   (599 397)
   (599 398)
   (599 399)
   (599 400)
   (599 401)
   (599 402)
   (599 403)
   (599 404)
   (599 405)
   (599 406)
   (599 407)
   (599 408)
   (599 409)
   (599 410)
   (599 411)
   (599 412)
   (599 413)
   (599 414)
   ...)}
 {:id 44,
  :cart
  ((440 136)
   (440 137)
   (440 138)
   (440 139)
   (440 140)
   (440 141)
   (440 142)
   (440 143)
   (440 144)
   (440 145)
   (440 146)
   (440 147)
   (440 148)
   (440 149)
   (440 150)
   (440 151)
   (440 152)
   (440 153)
   (440 154)
   (440 155)
   (440 156)
   (440 157)
   (440 158)
   (440 159)
   (440 160)
   (440 161)
   (440 162)
   (440 163)
   (441 136)
   (441 137)
   (441 138)
   (441 139)
   (441 140)
   (441 141)
   (441 142)
   (441 143)
   (441 144)
   (441 145)
   (441 146)
   (441 147)
   (441 148)
   (441 149)
   (441 150)
   (441 151)
   (441 152)
   (441 153)
   (441 154)
   (441 155)
   (441 156)
   (441 157)
   ...)}
 {:id 45,
  :cart
  ((657 50)
   (657 51)
   (657 52)
   (657 53)
   (657 54)
   (657 55)
   (657 56)
   (657 57)
   (657 58)
   (657 59)
   (657 60)
   (657 61)
   (657 62)
   (658 50)
   (658 51)
   (658 52)
   (658 53)
   (658 54)
   (658 55)
   (658 56)
   (658 57)
   (658 58)
   (658 59)
   (658 60)
   (658 61)
   (658 62)
   (659 50)
   (659 51)
   (659 52)
   (659 53)
   (659 54)
   (659 55)
   (659 56)
   (659 57)
   (659 58)
   (659 59)
   (659 60)
   (659 61)
   (659 62)
   (660 50)
   (660 51)
   (660 52)
   (660 53)
   (660 54)
   (660 55)
   (660 56)
   (660 57)
   (660 58)
   (660 59)
   (660 60)
   ...)}
 {:id 46,
  :cart
  ((134 155)
   (134 156)
   (134 157)
   (134 158)
   (134 159)
   (134 160)
   (134 161)
   (134 162)
   (134 163)
   (134 164)
   (134 165)
   (134 166)
   (134 167)
   (134 168)
   (134 169)
   (134 170)
   (134 171)
   (134 172)
   (134 173)
   (134 174)
   (134 175)
   (134 176)
   (134 177)
   (134 178)
   (134 179)
   (134 180)
   (134 181)
   (134 182)
   (135 155)
   (135 156)
   (135 157)
   (135 158)
   (135 159)
   (135 160)
   (135 161)
   (135 162)
   (135 163)
   (135 164)
   (135 165)
   (135 166)
   (135 167)
   (135 168)
   (135 169)
   (135 170)
   (135 171)
   (135 172)
   (135 173)
   (135 174)
   (135 175)
   (135 176)
   ...)}
 {:id 47,
  :cart
  ((873 580)
   (873 581)
   (873 582)
   (873 583)
   (873 584)
   (873 585)
   (873 586)
   (873 587)
   (873 588)
   (873 589)
   (873 590)
   (873 591)
   (873 592)
   (873 593)
   (873 594)
   (873 595)
   (874 580)
   (874 581)
   (874 582)
   (874 583)
   (874 584)
   (874 585)
   (874 586)
   (874 587)
   (874 588)
   (874 589)
   (874 590)
   (874 591)
   (874 592)
   (874 593)
   (874 594)
   (874 595)
   (875 580)
   (875 581)
   (875 582)
   (875 583)
   (875 584)
   (875 585)
   (875 586)
   (875 587)
   (875 588)
   (875 589)
   (875 590)
   (875 591)
   (875 592)
   (875 593)
   (875 594)
   (875 595)
   (876 580)
   (876 581)
   ...)}
 {:id 48,
  :cart
  ((519 287)
   (519 288)
   (519 289)
   (519 290)
   (519 291)
   (519 292)
   (519 293)
   (519 294)
   (519 295)
   (519 296)
   (519 297)
   (519 298)
   (519 299)
   (519 300)
   (519 301)
   (519 302)
   (519 303)
   (519 304)
   (519 305)
   (519 306)
   (519 307)
   (519 308)
   (519 309)
   (519 310)
   (520 287)
   (520 288)
   (520 289)
   (520 290)
   (520 291)
   (520 292)
   (520 293)
   (520 294)
   (520 295)
   (520 296)
   (520 297)
   (520 298)
   (520 299)
   (520 300)
   (520 301)
   (520 302)
   (520 303)
   (520 304)
   (520 305)
   (520 306)
   (520 307)
   (520 308)
   (520 309)
   (520 310)
   (521 287)
   (521 288)
   ...)}
 {:id 49,
  :cart
  ((283 691)
   (283 692)
   (283 693)
   (283 694)
   (283 695)
   (283 696)
   (283 697)
   (283 698)
   (283 699)
   (283 700)
   (283 701)
   (283 702)
   (283 703)
   (283 704)
   (283 705)
   (283 706)
   (283 707)
   (283 708)
   (283 709)
   (283 710)
   (284 691)
   (284 692)
   (284 693)
   (284 694)
   (284 695)
   (284 696)
   (284 697)
   (284 698)
   (284 699)
   (284 700)
   (284 701)
   (284 702)
   (284 703)
   (284 704)
   (284 705)
   (284 706)
   (284 707)
   (284 708)
   (284 709)
   (284 710)
   (285 691)
   (285 692)
   (285 693)
   (285 694)
   (285 695)
   (285 696)
   (285 697)
   (285 698)
   (285 699)
   (285 700)
   ...)}
 {:id 50,
  :cart
  ((78 660)
   (78 661)
   (78 662)
   (78 663)
   (78 664)
   (78 665)
   (78 666)
   (78 667)
   (78 668)
   (78 669)
   (78 670)
   (78 671)
   (78 672)
   (78 673)
   (78 674)
   (78 675)
   (78 676)
   (78 677)
   (78 678)
   (78 679)
   (78 680)
   (78 681)
   (78 682)
   (79 660)
   (79 661)
   (79 662)
   (79 663)
   (79 664)
   (79 665)
   (79 666)
   (79 667)
   (79 668)
   (79 669)
   (79 670)
   (79 671)
   (79 672)
   (79 673)
   (79 674)
   (79 675)
   (79 676)
   (79 677)
   (79 678)
   (79 679)
   (79 680)
   (79 681)
   (79 682)
   (80 660)
   (80 661)
   (80 662)
   (80 663)
   ...)}
 ...)
clj꞉aoc2018_3꞉> 
({:id 1,
  :cart
  ((49 222)
   (49 223)
   (49 224)
   (49 225)
   (49 226)
   (49 227)
   (49 228)
   (49 229)
   (49 230)
   (49 231)
   (49 232)
   (49 233)
   (49 234)
   (49 235)
   (49 236)
   (49 237)
   (49 238)
   (49 239)
   (49 240)
   (49 241)
   (50 222)
   (50 223)
   (50 224)
   (50 225)
   (50 226)
   (50 227)
   (50 228)
   (50 229)
   (50 230)
   (50 231)
   (50 232)
   (50 233)
   (50 234)
   (50 235)
   (50 236)
   (50 237)
   (50 238)
   (50 239)
   (50 240)
   (50 241)
   (51 222)
   (51 223)
   (51 224)
   (51 225)
   (51 226)
   (51 227)
   (51 228)
   (51 229)
   (51 230)
   (51 231)
   ...)}
 {:id 2,
  :cart
  ((162 876)
   (162 877)
   (162 878)
   (162 879)
   (162 880)
   (162 881)
   (162 882)
   (162 883)
   (162 884)
   (162 885)
   (162 886)
   (162 887)
   (162 888)
   (162 889)
   (162 890)
   (162 891)
   (162 892)
   (162 893)
   (162 894)
   (162 895)
   (162 896)
   (162 897)
   (162 898)
   (162 899)
   (162 900)
   (162 901)
   (162 902)
   (162 903)
   (162 904)
   (163 876)
   (163 877)
   (163 878)
   (163 879)
   (163 880)
   (163 881)
   (163 882)
   (163 883)
   (163 884)
   (163 885)
   (163 886)
   (163 887)
   (163 888)
   (163 889)
   (163 890)
   (163 891)
   (163 892)
   (163 893)
   (163 894)
   (163 895)
   (163 896)
   ...)}
 {:id 3,
  :cart
  ((28 156)
   (28 157)
   (28 158)
   (28 159)
   (28 160)
   (28 161)
   (28 162)
   (28 163)
   (28 164)
   (28 165)
   (28 166)
   (28 167)
   (28 168)
   (28 169)
   (28 170)
   (28 171)
   (28 172)
   (28 173)
   (29 156)
   (29 157)
   (29 158)
   (29 159)
   (29 160)
   (29 161)
   (29 162)
   (29 163)
   (29 164)
   (29 165)
   (29 166)
   (29 167)
   (29 168)
   (29 169)
   (29 170)
   (29 171)
   (29 172)
   (29 173)
   (30 156)
   (30 157)
   (30 158)
   (30 159)
   (30 160)
   (30 161)
   (30 162)
   (30 163)
   (30 164)
   (30 165)
   (30 166)
   (30 167)
   (30 168)
   (30 169)
   ...)}
 {:id 4,
  :cart
  ((673 337)
   (673 338)
   (673 339)
   (673 340)
   (673 341)
   (673 342)
   (673 343)
   (673 344)
   (673 345)
   (673 346)
   (673 347)
   (673 348)
   (673 349)
   (673 350)
   (673 351)
   (673 352)
   (673 353)
   (673 354)
   (673 355)
   (673 356)
   (673 357)
   (673 358)
   (673 359)
   (673 360)
   (674 337)
   (674 338)
   (674 339)
   (674 340)
   (674 341)
   (674 342)
   (674 343)
   (674 344)
   (674 345)
   (674 346)
   (674 347)
   (674 348)
   (674 349)
   (674 350)
   (674 351)
   (674 352)
   (674 353)
   (674 354)
   (674 355)
   (674 356)
   (674 357)
   (674 358)
   (674 359)
   (674 360)
   (675 337)
   (675 338)
   ...)}
 {:id 5,
  :cart
  ((213 834)
   (213 835)
   (213 836)
   (213 837)
   (213 838)
   (213 839)
   (213 840)
   (213 841)
   (213 842)
   (213 843)
   (213 844)
   (213 845)
   (213 846)
   (213 847)
   (213 848)
   (213 849)
   (213 850)
   (213 851)
   (213 852)
   (213 853)
   (213 854)
   (213 855)
   (213 856)
   (214 834)
   (214 835)
   (214 836)
   (214 837)
   (214 838)
   (214 839)
   (214 840)
   (214 841)
   (214 842)
   (214 843)
   (214 844)
   (214 845)
   (214 846)
   (214 847)
   (214 848)
   (214 849)
   (214 850)
   (214 851)
   (214 852)
   (214 853)
   (214 854)
   (214 855)
   (214 856)
   (215 834)
   (215 835)
   (215 836)
   (215 837)
   ...)}
 {:id 6,
  :cart
  ((675 523)
   (675 524)
   (675 525)
   (675 526)
   (675 527)
   (675 528)
   (675 529)
   (675 530)
   (675 531)
   (675 532)
   (675 533)
   (675 534)
   (675 535)
   (676 523)
   (676 524)
   (676 525)
   (676 526)
   (676 527)
   (676 528)
   (676 529)
   (676 530)
   (676 531)
   (676 532)
   (676 533)
   (676 534)
   (676 535)
   (677 523)
   (677 524)
   (677 525)
   (677 526)
   (677 527)
   (677 528)
   (677 529)
   (677 530)
   (677 531)
   (677 532)
   (677 533)
   (677 534)
   (677 535)
   (678 523)
   (678 524)
   (678 525)
   (678 526)
   (678 527)
   (678 528)
   (678 529)
   (678 530)
   (678 531)
   (678 532)
   (678 533)
   ...)}
 {:id 7,
  :cart
  ((97 7)
   (97 8)
   (97 9)
   (97 10)
   (97 11)
   (97 12)
   (97 13)
   (97 14)
   (97 15)
   (97 16)
   (97 17)
   (97 18)
   (97 19)
   (97 20)
   (97 21)
   (97 22)
   (97 23)
   (97 24)
   (97 25)
   (97 26)
   (97 27)
   (97 28)
   (97 29)
   (97 30)
   (97 31)
   (97 32)
   (97 33)
   (98 7)
   (98 8)
   (98 9)
   (98 10)
   (98 11)
   (98 12)
   (98 13)
   (98 14)
   (98 15)
   (98 16)
   (98 17)
   (98 18)
   (98 19)
   (98 20)
   (98 21)
   (98 22)
   (98 23)
   (98 24)
   (98 25)
   (98 26)
   (98 27)
   (98 28)
   (98 29)
   ...)}
 {:id 8,
  :cart
  ((92 512)
   (92 513)
   (92 514)
   (92 515)
   (92 516)
   (92 517)
   (92 518)
   (92 519)
   (92 520)
   (92 521)
   (92 522)
   (92 523)
   (92 524)
   (92 525)
   (92 526)
   (92 527)
   (92 528)
   (93 512)
   (93 513)
   (93 514)
   (93 515)
   (93 516)
   (93 517)
   (93 518)
   (93 519)
   (93 520)
   (93 521)
   (93 522)
   (93 523)
   (93 524)
   (93 525)
   (93 526)
   (93 527)
   (93 528)
   (94 512)
   (94 513)
   (94 514)
   (94 515)
   (94 516)
   (94 517)
   (94 518)
   (94 519)
   (94 520)
   (94 521)
   (94 522)
   (94 523)
   (94 524)
   (94 525)
   (94 526)
   (94 527)
   ...)}
 {:id 9,
  :cart
  ((507 525)
   (507 526)
   (507 527)
   (507 528)
   (507 529)
   (507 530)
   (507 531)
   (507 532)
   (507 533)
   (507 534)
   (507 535)
   (507 536)
   (507 537)
   (507 538)
   (507 539)
   (507 540)
   (507 541)
   (507 542)
   (507 543)
   (507 544)
   (508 525)
   (508 526)
   (508 527)
   (508 528)
   (508 529)
   (508 530)
   (508 531)
   (508 532)
   (508 533)
   (508 534)
   (508 535)
   (508 536)
   (508 537)
   (508 538)
   (508 539)
   (508 540)
   (508 541)
   (508 542)
   (508 543)
   (508 544)
   (509 525)
   (509 526)
   (509 527)
   (509 528)
   (509 529)
   (509 530)
   (509 531)
   (509 532)
   (509 533)
   (509 534)
   ...)}
 {:id 10,
  :cart
  ((47 742)
   (47 743)
   (47 744)
   (47 745)
   (47 746)
   (47 747)
   (47 748)
   (47 749)
   (47 750)
   (47 751)
   (47 752)
   (47 753)
   (47 754)
   (47 755)
   (47 756)
   (47 757)
   (47 758)
   (47 759)
   (47 760)
   (47 761)
   (47 762)
   (47 763)
   (47 764)
   (47 765)
   (47 766)
   (48 742)
   (48 743)
   (48 744)
   (48 745)
   (48 746)
   (48 747)
   (48 748)
   (48 749)
   (48 750)
   (48 751)
   (48 752)
   (48 753)
   (48 754)
   (48 755)
   (48 756)
   (48 757)
   (48 758)
   (48 759)
   (48 760)
   (48 761)
   (48 762)
   (48 763)
   (48 764)
   (48 765)
   (48 766)
   ...)}
 {:id 11,
  :cart
  ((154 740)
   (154 741)
   (154 742)
   (154 743)
   (154 744)
   (154 745)
   (154 746)
   (154 747)
   (154 748)
   (154 749)
   (154 750)
   (154 751)
   (154 752)
   (154 753)
   (154 754)
   (154 755)
   (154 756)
   (154 757)
   (154 758)
   (154 759)
   (154 760)
   (154 761)
   (154 762)
   (154 763)
   (154 764)
   (155 740)
   (155 741)
   (155 742)
   (155 743)
   (155 744)
   (155 745)
   (155 746)
   (155 747)
   (155 748)
   (155 749)
   (155 750)
   (155 751)
   (155 752)
   (155 753)
   (155 754)
   (155 755)
   (155 756)
   (155 757)
   (155 758)
   (155 759)
   (155 760)
   (155 761)
   (155 762)
   (155 763)
   (155 764)
   ...)}
 {:id 12,
  :cart
  ((808 793)
   (808 794)
   (808 795)
   (808 796)
   (808 797)
   (808 798)
   (808 799)
   (808 800)
   (808 801)
   (808 802)
   (808 803)
   (808 804)
   (808 805)
   (808 806)
   (808 807)
   (808 808)
   (808 809)
   (808 810)
   (808 811)
   (808 812)
   (808 813)
   (808 814)
   (808 815)
   (808 816)
   (809 793)
   (809 794)
   (809 795)
   (809 796)
   (809 797)
   (809 798)
   (809 799)
   (809 800)
   (809 801)
   (809 802)
   (809 803)
   (809 804)
   (809 805)
   (809 806)
   (809 807)
   (809 808)
   (809 809)
   (809 810)
   (809 811)
   (809 812)
   (809 813)
   (809 814)
   (809 815)
   (809 816)
   (810 793)
   (810 794)
   ...)}
 {:id 13,
  :cart
  ((249 936)
   (249 937)
   (249 938)
   (249 939)
   (249 940)
   (249 941)
   (249 942)
   (249 943)
   (249 944)
   (249 945)
   (249 946)
   (250 936)
   (250 937)
   (250 938)
   (250 939)
   (250 940)
   (250 941)
   (250 942)
   (250 943)
   (250 944)
   (250 945)
   (250 946)
   (251 936)
   (251 937)
   (251 938)
   (251 939)
   (251 940)
   (251 941)
   (251 942)
   (251 943)
   (251 944)
   (251 945)
   (251 946)
   (252 936)
   (252 937)
   (252 938)
   (252 939)
   (252 940)
   (252 941)
   (252 942)
   (252 943)
   (252 944)
   (252 945)
   (252 946)
   (253 936)
   (253 937)
   (253 938)
   (253 939)
   (253 940)
   (253 941)
   ...)}
 {:id 14,
  :cart
  ((93 400)
   (93 401)
   (93 402)
   (93 403)
   (93 404)
   (93 405)
   (93 406)
   (93 407)
   (93 408)
   (94 400)
   (94 401)
   (94 402)
   (94 403)
   (94 404)
   (94 405)
   (94 406)
   (94 407)
   (94 408)
   (95 400)
   (95 401)
   (95 402)
   (95 403)
   (95 404)
   (95 405)
   (95 406)
   (95 407)
   (95 408)
   (96 400)
   (96 401)
   (96 402)
   (96 403)
   (96 404)
   (96 405)
   (96 406)
   (96 407)
   (96 408)
   (97 400)
   (97 401)
   (97 402)
   (97 403)
   (97 404)
   (97 405)
   (97 406)
   (97 407)
   (97 408)
   (98 400)
   (98 401)
   (98 402)
   (98 403)
   (98 404)
   ...)}
 {:id 15,
  :cart
  ((295 894)
   (295 895)
   (295 896)
   (295 897)
   (295 898)
   (295 899)
   (295 900)
   (295 901)
   (295 902)
   (295 903)
   (295 904)
   (295 905)
   (295 906)
   (295 907)
   (295 908)
   (295 909)
   (295 910)
   (295 911)
   (295 912)
   (295 913)
   (295 914)
   (295 915)
   (296 894)
   (296 895)
   (296 896)
   (296 897)
   (296 898)
   (296 899)
   (296 900)
   (296 901)
   (296 902)
   (296 903)
   (296 904)
   (296 905)
   (296 906)
   (296 907)
   (296 908)
   (296 909)
   (296 910)
   (296 911)
   (296 912)
   (296 913)
   (296 914)
   (296 915)
   (297 894)
   (297 895)
   (297 896)
   (297 897)
   (297 898)
   (297 899)
   ...)}
 {:id 16,
  :cart
  ((535 885)
   (535 886)
   (535 887)
   (535 888)
   (535 889)
   (536 885)
   (536 886)
   (536 887)
   (536 888)
   (536 889)
   (537 885)
   (537 886)
   (537 887)
   (537 888)
   (537 889)
   (538 885)
   (538 886)
   (538 887)
   (538 888)
   (538 889)
   (539 885)
   (539 886)
   (539 887)
   (539 888)
   (539 889)
   (540 885)
   (540 886)
   (540 887)
   (540 888)
   (540 889)
   (541 885)
   (541 886)
   (541 887)
   (541 888)
   (541 889)
   (542 885)
   (542 886)
   (542 887)
   (542 888)
   (542 889))}
 {:id 17,
  :cart
  ((878 268)
   (878 269)
   (878 270)
   (878 271)
   (878 272)
   (878 273)
   (878 274)
   (878 275)
   (878 276)
   (878 277)
   (878 278)
   (879 268)
   (879 269)
   (879 270)
   (879 271)
   (879 272)
   (879 273)
   (879 274)
   (879 275)
   (879 276)
   (879 277)
   (879 278)
   (880 268)
   (880 269)
   (880 270)
   (880 271)
   (880 272)
   (880 273)
   (880 274)
   (880 275)
   (880 276)
   (880 277)
   (880 278)
   (881 268)
   (881 269)
   (881 270)
   (881 271)
   (881 272)
   (881 273)
   (881 274)
   (881 275)
   (881 276)
   (881 277)
   (881 278)
   (882 268)
   (882 269)
   (882 270)
   (882 271)
   (882 272)
   (882 273)
   ...)}
 {:id 18,
  :cart
  ((152 685)
   (152 686)
   (152 687)
   (152 688)
   (152 689)
   (152 690)
   (152 691)
   (152 692)
   (152 693)
   (152 694)
   (152 695)
   (152 696)
   (152 697)
   (152 698)
   (152 699)
   (152 700)
   (152 701)
   (152 702)
   (152 703)
   (152 704)
   (152 705)
   (152 706)
   (152 707)
   (152 708)
   (153 685)
   (153 686)
   (153 687)
   (153 688)
   (153 689)
   (153 690)
   (153 691)
   (153 692)
   (153 693)
   (153 694)
   (153 695)
   (153 696)
   (153 697)
   (153 698)
   (153 699)
   (153 700)
   (153 701)
   (153 702)
   (153 703)
   (153 704)
   (153 705)
   (153 706)
   (153 707)
   (153 708)
   (154 685)
   (154 686)
   ...)}
 {:id 19,
  :cart
  ((152 639)
   (152 640)
   (152 641)
   (152 642)
   (152 643)
   (152 644)
   (152 645)
   (152 646)
   (152 647)
   (152 648)
   (152 649)
   (152 650)
   (152 651)
   (152 652)
   (152 653)
   (152 654)
   (152 655)
   (152 656)
   (152 657)
   (152 658)
   (152 659)
   (152 660)
   (152 661)
   (152 662)
   (152 663)
   (152 664)
   (153 639)
   (153 640)
   (153 641)
   (153 642)
   (153 643)
   (153 644)
   (153 645)
   (153 646)
   (153 647)
   (153 648)
   (153 649)
   (153 650)
   (153 651)
   (153 652)
   (153 653)
   (153 654)
   (153 655)
   (153 656)
   (153 657)
   (153 658)
   (153 659)
   (153 660)
   (153 661)
   (153 662)
   ...)}
 {:id 20,
  :cart
  ((905 560)
   (905 561)
   (905 562)
   (905 563)
   (905 564)
   (905 565)
   (905 566)
   (905 567)
   (905 568)
   (905 569)
   (905 570)
   (905 571)
   (905 572)
   (905 573)
   (905 574)
   (905 575)
   (905 576)
   (905 577)
   (905 578)
   (905 579)
   (905 580)
   (905 581)
   (905 582)
   (905 583)
   (905 584)
   (905 585)
   (905 586)
   (906 560)
   (906 561)
   (906 562)
   (906 563)
   (906 564)
   (906 565)
   (906 566)
   (906 567)
   (906 568)
   (906 569)
   (906 570)
   (906 571)
   (906 572)
   (906 573)
   (906 574)
   (906 575)
   (906 576)
   (906 577)
   (906 578)
   (906 579)
   (906 580)
   (906 581)
   (906 582)
   ...)}
 {:id 21,
  :cart
  ((962 104)
   (962 105)
   (962 106)
   (962 107)
   (962 108)
   (962 109)
   (962 110)
   (962 111)
   (962 112)
   (962 113)
   (962 114)
   (962 115)
   (963 104)
   (963 105)
   (963 106)
   (963 107)
   (963 108)
   (963 109)
   (963 110)
   (963 111)
   (963 112)
   (963 113)
   (963 114)
   (963 115)
   (964 104)
   (964 105)
   (964 106)
   (964 107)
   (964 108)
   (964 109)
   (964 110)
   (964 111)
   (964 112)
   (964 113)
   (964 114)
   (964 115)
   (965 104)
   (965 105)
   (965 106)
   (965 107)
   (965 108)
   (965 109)
   (965 110)
   (965 111)
   (965 112)
   (965 113)
   (965 114)
   (965 115)
   (966 104)
   (966 105)
   ...)}
 {:id 22,
  :cart
  ((125 145)
   (125 146)
   (125 147)
   (125 148)
   (125 149)
   (125 150)
   (125 151)
   (125 152)
   (125 153)
   (125 154)
   (125 155)
   (125 156)
   (125 157)
   (125 158)
   (125 159)
   (125 160)
   (125 161)
   (125 162)
   (125 163)
   (125 164)
   (125 165)
   (125 166)
   (126 145)
   (126 146)
   (126 147)
   (126 148)
   (126 149)
   (126 150)
   (126 151)
   (126 152)
   (126 153)
   (126 154)
   (126 155)
   (126 156)
   (126 157)
   (126 158)
   (126 159)
   (126 160)
   (126 161)
   (126 162)
   (126 163)
   (126 164)
   (126 165)
   (126 166)
   (127 145)
   (127 146)
   (127 147)
   (127 148)
   (127 149)
   (127 150)
   ...)}
 {:id 23,
  :cart
  ((260 488)
   (260 489)
   (260 490)
   (260 491)
   (260 492)
   (260 493)
   (260 494)
   (260 495)
   (260 496)
   (260 497)
   (260 498)
   (260 499)
   (260 500)
   (260 501)
   (260 502)
   (260 503)
   (260 504)
   (260 505)
   (260 506)
   (260 507)
   (260 508)
   (261 488)
   (261 489)
   (261 490)
   (261 491)
   (261 492)
   (261 493)
   (261 494)
   (261 495)
   (261 496)
   (261 497)
   (261 498)
   (261 499)
   (261 500)
   (261 501)
   (261 502)
   (261 503)
   (261 504)
   (261 505)
   (261 506)
   (261 507)
   (261 508)
   (262 488)
   (262 489)
   (262 490)
   (262 491)
   (262 492)
   (262 493)
   (262 494)
   (262 495)
   ...)}
 {:id 24,
  :cart
  ((179 815)
   (179 816)
   (179 817)
   (179 818)
   (179 819)
   (179 820)
   (179 821)
   (179 822)
   (179 823)
   (179 824)
   (179 825)
   (179 826)
   (179 827)
   (179 828)
   (179 829)
   (179 830)
   (179 831)
   (179 832)
   (179 833)
   (179 834)
   (179 835)
   (179 836)
   (179 837)
   (179 838)
   (180 815)
   (180 816)
   (180 817)
   (180 818)
   (180 819)
   (180 820)
   (180 821)
   (180 822)
   (180 823)
   (180 824)
   (180 825)
   (180 826)
   (180 827)
   (180 828)
   (180 829)
   (180 830)
   (180 831)
   (180 832)
   (180 833)
   (180 834)
   (180 835)
   (180 836)
   (180 837)
   (180 838)
   (181 815)
   (181 816)
   ...)}
 {:id 25,
  :cart
  ((661 595)
   (661 596)
   (661 597)
   (661 598)
   (661 599)
   (661 600)
   (662 595)
   (662 596)
   (662 597)
   (662 598)
   (662 599)
   (662 600)
   (663 595)
   (663 596)
   (663 597)
   (663 598)
   (663 599)
   (663 600)
   (664 595)
   (664 596)
   (664 597)
   (664 598)
   (664 599)
   (664 600))}
 {:id 26,
  :cart
  ((584 97)
   (584 98)
   (584 99)
   (584 100)
   (584 101)
   (584 102)
   (584 103)
   (584 104)
   (584 105)
   (584 106)
   (584 107)
   (584 108)
   (584 109)
   (584 110)
   (584 111)
   (585 97)
   (585 98)
   (585 99)
   (585 100)
   (585 101)
   (585 102)
   (585 103)
   (585 104)
   (585 105)
   (585 106)
   (585 107)
   (585 108)
   (585 109)
   (585 110)
   (585 111)
   (586 97)
   (586 98)
   (586 99)
   (586 100)
   (586 101)
   (586 102)
   (586 103)
   (586 104)
   (586 105)
   (586 106)
   (586 107)
   (586 108)
   (586 109)
   (586 110)
   (586 111)
   (587 97)
   (587 98)
   (587 99)
   (587 100)
   (587 101)
   ...)}
 {:id 27,
  :cart
  ((869 842)
   (869 843)
   (869 844)
   (869 845)
   (869 846)
   (869 847)
   (869 848)
   (869 849)
   (869 850)
   (869 851)
   (869 852)
   (869 853)
   (869 854)
   (869 855)
   (869 856)
   (869 857)
   (869 858)
   (869 859)
   (869 860)
   (870 842)
   (870 843)
   (870 844)
   (870 845)
   (870 846)
   (870 847)
   (870 848)
   (870 849)
   (870 850)
   (870 851)
   (870 852)
   (870 853)
   (870 854)
   (870 855)
   (870 856)
   (870 857)
   (870 858)
   (870 859)
   (870 860)
   (871 842)
   (871 843)
   (871 844)
   (871 845)
   (871 846)
   (871 847)
   (871 848)
   (871 849)
   (871 850)
   (871 851)
   (871 852)
   (871 853)
   ...)}
 {:id 28,
  :cart
  ((491 825)
   (491 826)
   (491 827)
   (491 828)
   (491 829)
   (491 830)
   (491 831)
   (491 832)
   (491 833)
   (491 834)
   (491 835)
   (491 836)
   (491 837)
   (491 838)
   (491 839)
   (491 840)
   (491 841)
   (491 842)
   (491 843)
   (491 844)
   (491 845)
   (491 846)
   (491 847)
   (491 848)
   (491 849)
   (492 825)
   (492 826)
   (492 827)
   (492 828)
   (492 829)
   (492 830)
   (492 831)
   (492 832)
   (492 833)
   (492 834)
   (492 835)
   (492 836)
   (492 837)
   (492 838)
   (492 839)
   (492 840)
   (492 841)
   (492 842)
   (492 843)
   (492 844)
   (492 845)
   (492 846)
   (492 847)
   (492 848)
   (492 849)
   ...)}
 {:id 29,
  :cart
  ((639 935)
   (639 936)
   (639 937)
   (639 938)
   (639 939)
   (639 940)
   (639 941)
   (639 942)
   (639 943)
   (639 944)
   (639 945)
   (639 946)
   (639 947)
   (639 948)
   (639 949)
   (639 950)
   (639 951)
   (639 952)
   (639 953)
   (639 954)
   (639 955)
   (639 956)
   (639 957)
   (639 958)
   (639 959)
   (639 960)
   (639 961)
   (639 962)
   (640 935)
   (640 936)
   (640 937)
   (640 938)
   (640 939)
   (640 940)
   (640 941)
   (640 942)
   (640 943)
   (640 944)
   (640 945)
   (640 946)
   (640 947)
   (640 948)
   (640 949)
   (640 950)
   (640 951)
   (640 952)
   (640 953)
   (640 954)
   (640 955)
   (640 956)
   ...)}
 {:id 30,
  :cart
  ((583 26)
   (583 27)
   (583 28)
   (583 29)
   (583 30)
   (583 31)
   (583 32)
   (583 33)
   (583 34)
   (583 35)
   (583 36)
   (583 37)
   (583 38)
   (584 26)
   (584 27)
   (584 28)
   (584 29)
   (584 30)
   (584 31)
   (584 32)
   (584 33)
   (584 34)
   (584 35)
   (584 36)
   (584 37)
   (584 38)
   (585 26)
   (585 27)
   (585 28)
   (585 29)
   (585 30)
   (585 31)
   (585 32)
   (585 33)
   (585 34)
   (585 35)
   (585 36)
   (585 37)
   (585 38)
   (586 26)
   (586 27)
   (586 28)
   (586 29)
   (586 30)
   (586 31)
   (586 32)
   (586 33)
   (586 34)
   (586 35)
   (586 36)
   ...)}
 {:id 31,
  :cart
  ((956 264)
   (956 265)
   (956 266)
   (956 267)
   (956 268)
   (956 269)
   (956 270)
   (956 271)
   (956 272)
   (956 273)
   (956 274)
   (956 275)
   (956 276)
   (956 277)
   (956 278)
   (956 279)
   (956 280)
   (957 264)
   (957 265)
   (957 266)
   (957 267)
   (957 268)
   (957 269)
   (957 270)
   (957 271)
   (957 272)
   (957 273)
   (957 274)
   (957 275)
   (957 276)
   (957 277)
   (957 278)
   (957 279)
   (957 280)
   (958 264)
   (958 265)
   (958 266)
   (958 267)
   (958 268)
   (958 269)
   (958 270)
   (958 271)
   (958 272)
   (958 273)
   (958 274)
   (958 275)
   (958 276)
   (958 277)
   (958 278)
   (958 279)
   ...)}
 {:id 32,
  :cart
  ((168 706)
   (168 707)
   (168 708)
   (168 709)
   (168 710)
   (168 711)
   (168 712)
   (168 713)
   (168 714)
   (168 715)
   (168 716)
   (168 717)
   (168 718)
   (168 719)
   (168 720)
   (168 721)
   (168 722)
   (168 723)
   (168 724)
   (168 725)
   (168 726)
   (169 706)
   (169 707)
   (169 708)
   (169 709)
   (169 710)
   (169 711)
   (169 712)
   (169 713)
   (169 714)
   (169 715)
   (169 716)
   (169 717)
   (169 718)
   (169 719)
   (169 720)
   (169 721)
   (169 722)
   (169 723)
   (169 724)
   (169 725)
   (169 726)
   (170 706)
   (170 707)
   (170 708)
   (170 709)
   (170 710)
   (170 711)
   (170 712)
   (170 713)
   ...)}
 {:id 33,
  :cart
  ((10 81)
   (10 82)
   (10 83)
   (10 84)
   (10 85)
   (10 86)
   (10 87)
   (10 88)
   (10 89)
   (10 90)
   (10 91)
   (10 92)
   (10 93)
   (10 94)
   (10 95)
   (10 96)
   (10 97)
   (10 98)
   (11 81)
   (11 82)
   (11 83)
   (11 84)
   (11 85)
   (11 86)
   (11 87)
   (11 88)
   (11 89)
   (11 90)
   (11 91)
   (11 92)
   (11 93)
   (11 94)
   (11 95)
   (11 96)
   (11 97)
   (11 98)
   (12 81)
   (12 82)
   (12 83)
   (12 84)
   (12 85)
   (12 86)
   (12 87)
   (12 88)
   (12 89)
   (12 90)
   (12 91)
   (12 92)
   (12 93)
   (12 94)
   ...)}
 {:id 34,
  :cart
  ((751 214)
   (751 215)
   (751 216)
   (751 217)
   (751 218)
   (751 219)
   (751 220)
   (751 221)
   (751 222)
   (751 223)
   (751 224)
   (751 225)
   (751 226)
   (751 227)
   (751 228)
   (751 229)
   (751 230)
   (751 231)
   (751 232)
   (751 233)
   (751 234)
   (752 214)
   (752 215)
   (752 216)
   (752 217)
   (752 218)
   (752 219)
   (752 220)
   (752 221)
   (752 222)
   (752 223)
   (752 224)
   (752 225)
   (752 226)
   (752 227)
   (752 228)
   (752 229)
   (752 230)
   (752 231)
   (752 232)
   (752 233)
   (752 234)
   (753 214)
   (753 215)
   (753 216)
   (753 217)
   (753 218)
   (753 219)
   (753 220)
   (753 221)
   ...)}
 {:id 35,
  :cart
  ((830 200)
   (830 201)
   (830 202)
   (830 203)
   (830 204)
   (830 205)
   (830 206)
   (830 207)
   (830 208)
   (830 209)
   (830 210)
   (830 211)
   (830 212)
   (830 213)
   (830 214)
   (830 215)
   (830 216)
   (830 217)
   (830 218)
   (830 219)
   (831 200)
   (831 201)
   (831 202)
   (831 203)
   (831 204)
   (831 205)
   (831 206)
   (831 207)
   (831 208)
   (831 209)
   (831 210)
   (831 211)
   (831 212)
   (831 213)
   (831 214)
   (831 215)
   (831 216)
   (831 217)
   (831 218)
   (831 219)
   (832 200)
   (832 201)
   (832 202)
   (832 203)
   (832 204)
   (832 205)
   (832 206)
   (832 207)
   (832 208)
   (832 209)
   ...)}
 {:id 36,
  :cart
  ((587 580)
   (587 581)
   (587 582)
   (587 583)
   (587 584)
   (587 585)
   (587 586)
   (587 587)
   (587 588)
   (587 589)
   (587 590)
   (587 591)
   (587 592)
   (587 593)
   (587 594)
   (587 595)
   (587 596)
   (587 597)
   (587 598)
   (587 599)
   (588 580)
   (588 581)
   (588 582)
   (588 583)
   (588 584)
   (588 585)
   (588 586)
   (588 587)
   (588 588)
   (588 589)
   (588 590)
   (588 591)
   (588 592)
   (588 593)
   (588 594)
   (588 595)
   (588 596)
   (588 597)
   (588 598)
   (588 599)
   (589 580)
   (589 581)
   (589 582)
   (589 583)
   (589 584)
   (589 585)
   (589 586)
   (589 587)
   (589 588)
   (589 589)
   ...)}
 {:id 37,
  :cart
  ((749 587)
   (749 588)
   (749 589)
   (749 590)
   (749 591)
   (749 592)
   (749 593)
   (749 594)
   (749 595)
   (749 596)
   (749 597)
   (749 598)
   (749 599)
   (750 587)
   (750 588)
   (750 589)
   (750 590)
   (750 591)
   (750 592)
   (750 593)
   (750 594)
   (750 595)
   (750 596)
   (750 597)
   (750 598)
   (750 599)
   (751 587)
   (751 588)
   (751 589)
   (751 590)
   (751 591)
   (751 592)
   (751 593)
   (751 594)
   (751 595)
   (751 596)
   (751 597)
   (751 598)
   (751 599)
   (752 587)
   (752 588)
   (752 589)
   (752 590)
   (752 591)
   (752 592)
   (752 593)
   (752 594)
   (752 595)
   (752 596)
   (752 597)
   ...)}
 {:id 38,
  :cart
  ((546 376)
   (546 377)
   (546 378)
   (546 379)
   (546 380)
   (546 381)
   (546 382)
   (546 383)
   (546 384)
   (546 385)
   (546 386)
   (546 387)
   (546 388)
   (546 389)
   (546 390)
   (546 391)
   (546 392)
   (546 393)
   (546 394)
   (546 395)
   (546 396)
   (546 397)
   (546 398)
   (546 399)
   (546 400)
   (547 376)
   (547 377)
   (547 378)
   (547 379)
   (547 380)
   (547 381)
   (547 382)
   (547 383)
   (547 384)
   (547 385)
   (547 386)
   (547 387)
   (547 388)
   (547 389)
   (547 390)
   (547 391)
   (547 392)
   (547 393)
   (547 394)
   (547 395)
   (547 396)
   (547 397)
   (547 398)
   (547 399)
   (547 400)
   ...)}
 {:id 39,
  :cart
  ((222 945)
   (222 946)
   (222 947)
   (222 948)
   (222 949)
   (222 950)
   (222 951)
   (222 952)
   (222 953)
   (222 954)
   (222 955)
   (222 956)
   (222 957)
   (222 958)
   (222 959)
   (222 960)
   (222 961)
   (222 962)
   (222 963)
   (222 964)
   (222 965)
   (222 966)
   (222 967)
   (222 968)
   (222 969)
   (222 970)
   (222 971)
   (222 972)
   (223 945)
   (223 946)
   (223 947)
   (223 948)
   (223 949)
   (223 950)
   (223 951)
   (223 952)
   (223 953)
   (223 954)
   (223 955)
   (223 956)
   (223 957)
   (223 958)
   (223 959)
   (223 960)
   (223 961)
   (223 962)
   (223 963)
   (223 964)
   (223 965)
   (223 966)
   ...)}
 {:id 40,
  :cart
  ((43 937)
   (43 938)
   (43 939)
   (43 940)
   (43 941)
   (43 942)
   (43 943)
   (43 944)
   (43 945)
   (43 946)
   (43 947)
   (43 948)
   (43 949)
   (43 950)
   (43 951)
   (43 952)
   (43 953)
   (43 954)
   (43 955)
   (43 956)
   (43 957)
   (43 958)
   (43 959)
   (43 960)
   (43 961)
   (43 962)
   (43 963)
   (44 937)
   (44 938)
   (44 939)
   (44 940)
   (44 941)
   (44 942)
   (44 943)
   (44 944)
   (44 945)
   (44 946)
   (44 947)
   (44 948)
   (44 949)
   (44 950)
   (44 951)
   (44 952)
   (44 953)
   (44 954)
   (44 955)
   (44 956)
   (44 957)
   (44 958)
   (44 959)
   ...)}
 {:id 41,
  :cart
  ((53 108)
   (53 109)
   (53 110)
   (53 111)
   (53 112)
   (53 113)
   (53 114)
   (53 115)
   (53 116)
   (53 117)
   (53 118)
   (53 119)
   (53 120)
   (53 121)
   (53 122)
   (53 123)
   (53 124)
   (53 125)
   (53 126)
   (53 127)
   (53 128)
   (54 108)
   (54 109)
   (54 110)
   (54 111)
   (54 112)
   (54 113)
   (54 114)
   (54 115)
   (54 116)
   (54 117)
   (54 118)
   (54 119)
   (54 120)
   (54 121)
   (54 122)
   (54 123)
   (54 124)
   (54 125)
   (54 126)
   (54 127)
   (54 128)
   (55 108)
   (55 109)
   (55 110)
   (55 111)
   (55 112)
   (55 113)
   (55 114)
   (55 115)
   ...)}
 {:id 42,
  :cart
  ((669 894)
   (669 895)
   (669 896)
   (669 897)
   (669 898)
   (669 899)
   (669 900)
   (669 901)
   (669 902)
   (669 903)
   (669 904)
   (669 905)
   (669 906)
   (669 907)
   (669 908)
   (669 909)
   (669 910)
   (669 911)
   (669 912)
   (669 913)
   (669 914)
   (669 915)
   (669 916)
   (669 917)
   (669 918)
   (669 919)
   (669 920)
   (669 921)
   (670 894)
   (670 895)
   (670 896)
   (670 897)
   (670 898)
   (670 899)
   (670 900)
   (670 901)
   (670 902)
   (670 903)
   (670 904)
   (670 905)
   (670 906)
   (670 907)
   (670 908)
   (670 909)
   (670 910)
   (670 911)
   (670 912)
   (670 913)
   (670 914)
   (670 915)
   ...)}
 {:id 43,
  :cart
  ((598 390)
   (598 391)
   (598 392)
   (598 393)
   (598 394)
   (598 395)
   (598 396)
   (598 397)
   (598 398)
   (598 399)
   (598 400)
   (598 401)
   (598 402)
   (598 403)
   (598 404)
   (598 405)
   (598 406)
   (598 407)
   (598 408)
   (598 409)
   (598 410)
   (598 411)
   (598 412)
   (598 413)
   (598 414)
   (599 390)
   (599 391)
   (599 392)
   (599 393)
   (599 394)
   (599 395)
   (599 396)
   (599 397)
   (599 398)
   (599 399)
   (599 400)
   (599 401)
   (599 402)
   (599 403)
   (599 404)
   (599 405)
   (599 406)
   (599 407)
   (599 408)
   (599 409)
   (599 410)
   (599 411)
   (599 412)
   (599 413)
   (599 414)
   ...)}
 {:id 44,
  :cart
  ((440 136)
   (440 137)
   (440 138)
   (440 139)
   (440 140)
   (440 141)
   (440 142)
   (440 143)
   (440 144)
   (440 145)
   (440 146)
   (440 147)
   (440 148)
   (440 149)
   (440 150)
   (440 151)
   (440 152)
   (440 153)
   (440 154)
   (440 155)
   (440 156)
   (440 157)
   (440 158)
   (440 159)
   (440 160)
   (440 161)
   (440 162)
   (440 163)
   (441 136)
   (441 137)
   (441 138)
   (441 139)
   (441 140)
   (441 141)
   (441 142)
   (441 143)
   (441 144)
   (441 145)
   (441 146)
   (441 147)
   (441 148)
   (441 149)
   (441 150)
   (441 151)
   (441 152)
   (441 153)
   (441 154)
   (441 155)
   (441 156)
   (441 157)
   ...)}
 {:id 45,
  :cart
  ((657 50)
   (657 51)
   (657 52)
   (657 53)
   (657 54)
   (657 55)
   (657 56)
   (657 57)
   (657 58)
   (657 59)
   (657 60)
   (657 61)
   (657 62)
   (658 50)
   (658 51)
   (658 52)
   (658 53)
   (658 54)
   (658 55)
   (658 56)
   (658 57)
   (658 58)
   (658 59)
   (658 60)
   (658 61)
   (658 62)
   (659 50)
   (659 51)
   (659 52)
   (659 53)
   (659 54)
   (659 55)
   (659 56)
   (659 57)
   (659 58)
   (659 59)
   (659 60)
   (659 61)
   (659 62)
   (660 50)
   (660 51)
   (660 52)
   (660 53)
   (660 54)
   (660 55)
   (660 56)
   (660 57)
   (660 58)
   (660 59)
   (660 60)
   ...)}
 {:id 46,
  :cart
  ((134 155)
   (134 156)
   (134 157)
   (134 158)
   (134 159)
   (134 160)
   (134 161)
   (134 162)
   (134 163)
   (134 164)
   (134 165)
   (134 166)
   (134 167)
   (134 168)
   (134 169)
   (134 170)
   (134 171)
   (134 172)
   (134 173)
   (134 174)
   (134 175)
   (134 176)
   (134 177)
   (134 178)
   (134 179)
   (134 180)
   (134 181)
   (134 182)
   (135 155)
   (135 156)
   (135 157)
   (135 158)
   (135 159)
   (135 160)
   (135 161)
   (135 162)
   (135 163)
   (135 164)
   (135 165)
   (135 166)
   (135 167)
   (135 168)
   (135 169)
   (135 170)
   (135 171)
   (135 172)
   (135 173)
   (135 174)
   (135 175)
   (135 176)
   ...)}
 {:id 47,
  :cart
  ((873 580)
   (873 581)
   (873 582)
   (873 583)
   (873 584)
   (873 585)
   (873 586)
   (873 587)
   (873 588)
   (873 589)
   (873 590)
   (873 591)
   (873 592)
   (873 593)
   (873 594)
   (873 595)
   (874 580)
   (874 581)
   (874 582)
   (874 583)
   (874 584)
   (874 585)
   (874 586)
   (874 587)
   (874 588)
   (874 589)
   (874 590)
   (874 591)
   (874 592)
   (874 593)
   (874 594)
   (874 595)
   (875 580)
   (875 581)
   (875 582)
   (875 583)
   (875 584)
   (875 585)
   (875 586)
   (875 587)
   (875 588)
   (875 589)
   (875 590)
   (875 591)
   (875 592)
   (875 593)
   (875 594)
   (875 595)
   (876 580)
   (876 581)
   ...)}
 {:id 48,
  :cart
  ((519 287)
   (519 288)
   (519 289)
   (519 290)
   (519 291)
   (519 292)
   (519 293)
   (519 294)
   (519 295)
   (519 296)
   (519 297)
   (519 298)
   (519 299)
   (519 300)
   (519 301)
   (519 302)
   (519 303)
   (519 304)
   (519 305)
   (519 306)
   (519 307)
   (519 308)
   (519 309)
   (519 310)
   (520 287)
   (520 288)
   (520 289)
   (520 290)
   (520 291)
   (520 292)
   (520 293)
   (520 294)
   (520 295)
   (520 296)
   (520 297)
   (520 298)
   (520 299)
   (520 300)
   (520 301)
   (520 302)
   (520 303)
   (520 304)
   (520 305)
   (520 306)
   (520 307)
   (520 308)
   (520 309)
   (520 310)
   (521 287)
   (521 288)
   ...)}
 {:id 49,
  :cart
  ((283 691)
   (283 692)
   (283 693)
   (283 694)
   (283 695)
   (283 696)
   (283 697)
   (283 698)
   (283 699)
   (283 700)
   (283 701)
   (283 702)
   (283 703)
   (283 704)
   (283 705)
   (283 706)
   (283 707)
   (283 708)
   (283 709)
   (283 710)
   (284 691)
   (284 692)
   (284 693)
   (284 694)
   (284 695)
   (284 696)
   (284 697)
   (284 698)
   (284 699)
   (284 700)
   (284 701)
   (284 702)
   (284 703)
   (284 704)
   (284 705)
   (284 706)
   (284 707)
   (284 708)
   (284 709)
   (284 710)
   (285 691)
   (285 692)
   (285 693)
   (285 694)
   (285 695)
   (285 696)
   (285 697)
   (285 698)
   (285 699)
   (285 700)
   ...)}
 {:id 50,
  :cart
  ((78 660)
   (78 661)
   (78 662)
   (78 663)
   (78 664)
   (78 665)
   (78 666)
   (78 667)
   (78 668)
   (78 669)
   (78 670)
   (78 671)
   (78 672)
   (78 673)
   (78 674)
   (78 675)
   (78 676)
   (78 677)
   (78 678)
   (78 679)
   (78 680)
   (78 681)
   (78 682)
   (79 660)
   (79 661)
   (79 662)
   (79 663)
   (79 664)
   (79 665)
   (79 666)
   (79 667)
   (79 668)
   (79 669)
   (79 670)
   (79 671)
   (79 672)
   (79 673)
   (79 674)
   (79 675)
   (79 676)
   (79 677)
   (79 678)
   (79 679)
   (79 680)
   (79 681)
   (79 682)
   (80 660)
   (80 661)
   (80 662)
   (80 663)
   ...)}
 ...)
clj꞉aoc2018_3꞉> 
({:id 1, :cart ((1 3) (1 4) (1 5) (1 6) (2 3) (2 4) (2 5) (2 6) (3 3) (3 4) (3 5) (3 6) (4 3) (4 4) (4 5) (4 6))}
 {:id 2, :cart ((3 1) (3 2) (3 3) (3 4) (4 1) (4 2) (4 3) (4 4) (5 1) (5 2) (5 3) (5 4) (6 1) (6 2) (6 3) (6 4))}
 {:id 3, :cart ((5 5) (5 6) (6 5) (6 6))})
clj꞉aoc2018_3꞉> 
{:b 1}
clj꞉aoc2018-1꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Syntax error compiling at (src/aoc2018_3.clj:124:3).
; Unable to resolve symbol: get-cartesian-product in this context
clj꞉aoc2018_3꞉> 
; Jacking in...
; nREPL Connection was closed
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.0.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; Evaluating file: aoc2018_3.clj
nil
clj꞉aoc2018_3꞉> 
{:id nil, :cart ((1 3) (1 4) (1 5) (1 6) (2 3) (2 4) (2 5) (2 6) (3 3) (3 4) (3 5) (3 6) (4 3) (4 4) (4 5) (4 6))}
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Syntax error compiling at (src/aoc2018_3.clj:142:3).
; Unable to resolve symbol: append-id-to-map-on-matching-coordinate in this context
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
nil
clj꞉aoc2018_3꞉> 
; Execution error (ArityException) at aoc2018-3/append-id-to-map-on-matching-coordinate (aoc2018_3.clj:61).
; Wrong number of args (0) passed to: clojure.lang.PersistentVector
clj꞉aoc2018_3꞉> 
(80 663)
; Execution error (ClassCastException) at aoc2018-3/eval8593 (REPL:5310).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉aoc2018_3꞉> 
; Execution error (ArityException) at aoc2018-3/append-id-to-map-on-matching-coordinate (aoc2018_3.clj:61).
; Wrong number of args (0) passed to: clojure.lang.PersistentVector
clj꞉aoc2018_3꞉> 
#'aoc2018_3/append-id-to-map-on-matching-coordinate
clj꞉aoc2018_3꞉> 
; Execution error (ArityException) at aoc2018-3/append-id-to-map-on-matching-coordinate (REPL:61).
; Wrong number of args (0) passed to: clojure.lang.PersistentVector
clj꞉aoc2018_3꞉> 
[1 2 3 1]
clj꞉aoc2018_3꞉> 
; Execution error (ArityException) at aoc2018-3/append-id-to-map-on-matching-coordinate (REPL:61).
; Wrong number of args (0) passed to: clojure.lang.PersistentVector
clj꞉aoc2018_3꞉> 
#'aoc2018_3/append-id-to-map-on-matching-coordinate
clj꞉aoc2018_3꞉> 
[1] {(2 3) [1]} (2 3)
; Execution error (ArityException) at aoc2018-3/append-id-to-map-on-matching-coordinate (REPL:62).
; Wrong number of args (0) passed to: clojure.lang.PersistentVector
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
#'aoc2018_3/append-id-to-map-on-matching-coordinate
clj꞉aoc2018_3꞉> 
[1] {(2 3) [1]} (2 3)
{(2 3) [1 1]}
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
nil
clj꞉aoc2018_3꞉> 
#{3} {(2 3) #{3}} (2 3)
{(2 3) #{1 3}}
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
#'aoc2018_3/part1-solution
clj꞉aoc2018_3꞉> 
nil {} (1 3)
nil {(1 3) #{1}} (1 4)
nil {(1 3) #{1}, (1 4) #{1}} (1 5)
nil {(1 3) #{1}, (1 4) #{1}, (1 5) #{1}} (1 6)
nil {(1 3) #{1}, (1 4) #{1}, (1 5) #{1}, (1 6) #{1}} (2 3)
nil {(1 3) #{1}, (1 4) #{1}, (1 5) #{1}, (1 6) #{1}, (2 3) #{1}} (2 4)
nil {(1 3) #{1}, (1 4) #{1}, (1 5) #{1}, (1 6) #{1}, (2 3) #{1}, (2 4) #{1}} (2 5)
nil {(1 3) #{1}, (1 4) #{1}, (1 5) #{1}, (1 6) #{1}, (2 3) #{1}, (2 4) #{1}, (2 5) #{1}} (2 6)
nil {(1 3) #{1}, (1 4) #{1}, (1 5) #{1}, (1 6) #{1}, (2 3) #{1}, (2 4) #{1}, (2 5) #{1}, (2 6) #{1}} (3 3)
nil {(2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (1 6) #{1}, (2 6) #{1}} (3 4)
nil {(2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (1 6) #{1}, (2 6) #{1}} (3 5)
nil {(2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (1 6) #{1}, (2 6) #{1}, (3 5) #{1}} (3 6)
nil {(2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (1 6) #{1}, (2 6) #{1}, (3 5) #{1}} (4 3)
nil {(4 3) #{1}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (1 6) #{1}, (2 6) #{1}, (3 5) #{1}} (4 4)
nil {(4 3) #{1}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (1 6) #{1}, (4 4) #{1}, (2 6) #{1}, (3 5) #{1}} (4 5)
nil {(4 3) #{1}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (1 6) #{1}, (4 4) #{1}, (2 6) #{1}, (3 5) #{1}} (4 6)
{(4 3) #{1},
 (2 3) #{1},
 (2 5) #{1},
 (3 3) #{1},
 (3 4) #{1},
 (4 6) #{1},
 (1 4) #{1},
 (1 3) #{1},
 (1 5) #{1},
 (2 4) #{1},
 (3 6) #{1},
 (4 5) #{1},
 (1 6) #{1},
 (4 4) #{1},
 (2 6) #{1},
 (3 5) #{1}}
clj꞉aoc2018_3꞉> 
#'aoc2018_3/part1-solution
clj꞉aoc2018_3꞉> 
({:id 1, :cart ((1 3) (1 4) (1 5) (1 6) (2 3) (2 4) (2 5) (2 6) (3 3) (3 4) (3 5) (3 6) (4 3) (4 4) (4 5) (4 6))}
 {:id 2, :cart ((3 1) (3 2) (3 3) (3 4) (4 1) (4 2) (4 3) (4 4) (5 1) (5 2) (5 3) (5 4) (6 1) (6 2) (6 3) (6 4))}
 {:id 3, :cart ((5 5) (5 6) (6 5) (6 6))})
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
nil
clj꞉aoc2018_3꞉> 
1 ((1 3) (1 4) (1 5) (1 6) (2 3) (2 4) (2 5) (2 6) (3 3) (3 4) (3 5) (3 6) (4 3) (4 4) (4 5) (4 6)) ({:id 2, :cart ((3 1) (3 2) (3 3) (3 4) (4 1) (4 2) (4 3) (4 4) (5 1) (5 2) (5 3) (5 4) (6 1) (6 2) (6 3) (6 4))} {:id 3, :cart ((5 5) (5 6) (6 5) (6 6))}) {}
nil {} (1 3)
nil {(1 3) #{1}} (1 4)
nil {(1 3) #{1}, (1 4) #{1}} (1 5)
nil {(1 3) #{1}, (1 4) #{1}, (1 5) #{1}} (1 6)
nil {(1 3) #{1}, (1 4) #{1}, (1 5) #{1}, (1 6) #{1}} (2 3)
nil {(1 3) #{1}, (1 4) #{1}, (1 5) #{1}, (1 6) #{1}, (2 3) #{1}} (2 4)
nil {(1 3) #{1}, (1 4) #{1}, (1 5) #{1}, (1 6) #{1}, (2 3) #{1}, (2 4) #{1}} (2 5)
nil {(1 3) #{1}, (1 4) #{1}, (1 5) #{1}, (1 6) #{1}, (2 3) #{1}, (2 4) #{1}, (2 5) #{1}} (2 6)
nil {(1 3) #{1}, (1 4) #{1}, (1 5) #{1}, (1 6) #{1}, (2 3) #{1}, (2 4) #{1}, (2 5) #{1}, (2 6) #{1}} (3 3)
nil {(2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (1 6) #{1}, (2 6) #{1}} (3 4)
nil {(2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (1 6) #{1}, (2 6) #{1}} (3 5)
nil {(2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (1 6) #{1}, (2 6) #{1}, (3 5) #{1}} (3 6)
nil {(2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (1 6) #{1}, (2 6) #{1}, (3 5) #{1}} (4 3)
nil {(4 3) #{1}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (1 6) #{1}, (2 6) #{1}, (3 5) #{1}} (4 4)
nil {(4 3) #{1}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (1 6) #{1}, (4 4) #{1}, (2 6) #{1}, (3 5) #{1}} (4 5)
nil {(4 3) #{1}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (1 6) #{1}, (4 4) #{1}, (2 6) #{1}, (3 5) #{1}} (4 6)
2 ((3 1) (3 2) (3 3) (3 4) (4 1) (4 2) (4 3) (4 4) (5 1) (5 2) (5 3) (5 4) (6 1) (6 2) (6 3) (6 4)) ({:id 3, :cart ((5 5) (5 6) (6 5) (6 6))}) {(4 3) #{1}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (1 6) #{1}, (4 4) #{1}, (2 6) #{1}, (3 5) #{1}}
nil {(4 3) #{1}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (1 6) #{1}, (4 4) #{1}, (2 6) #{1}, (3 5) #{1}} (3 1)
nil {(4 3) #{1}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1}, (2 6) #{1}, (3 5) #{1}} (3 2)
#{1} {(4 3) #{1}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1}, (2 6) #{1}, (3 5) #{1}, (3 2) #{2}} (3 3)
#{1} {(4 3) #{1}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (3 4) #{1}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1}, (2 6) #{1}, (3 5) #{1}, (3 2) #{2}} (3 4)
nil {(4 3) #{1}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (3 4) #{1 2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1}, (2 6) #{1}, (3 5) #{1}, (3 2) #{2}} (4 1)
nil {(4 3) #{1}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (3 4) #{1 2}, (4 1) #{2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1}, (2 6) #{1}, (3 5) #{1}, (3 2) #{2}} (4 2)
#{1} {(4 3) #{1}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (3 4) #{1 2}, (4 2) #{2}, (4 1) #{2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1}, (2 6) #{1}, (3 5) #{1}, (3 2) #{2}} (4 3)
#{1} {(4 3) #{1 2}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (3 4) #{1 2}, (4 2) #{2}, (4 1) #{2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1}, (2 6) #{1}, (3 5) #{1}, (3 2) #{2}} (4 4)
nil {(4 3) #{1 2}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (3 4) #{1 2}, (4 2) #{2}, (4 1) #{2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1 2}, (2 6) #{1}, (3 5) #{1}, (3 2) #{2}} (5 1)
nil {(4 3) #{1 2}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (3 4) #{1 2}, (4 2) #{2}, (4 1) #{2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (5 1) #{2}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1 2}, (2 6) #{1}, (3 5) #{1}, (3 2) #{2}} (5 2)
nil {(4 3) #{1 2}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (3 4) #{1 2}, (4 2) #{2}, (4 1) #{2}, (5 2) #{2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (5 1) #{2}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1 2}, (2 6) #{1}, (3 5) #{1}, (3 2) #{2}} (5 3)
nil {(4 3) #{1 2}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (3 4) #{1 2}, (4 2) #{2}, (5 3) #{2}, (4 1) #{2}, (5 2) #{2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (5 1) #{2}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1 2}, (2 6) #{1}, (3 5) #{1}, (3 2) #{2}} (5 4)
nil {(4 3) #{1 2}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (5 4) #{2}, (3 4) #{1 2}, (4 2) #{2}, (5 3) #{2}, (4 1) #{2}, (5 2) #{2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (5 1) #{2}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1 2}, (2 6) #{1}, (3 5) #{1}, (3 2) #{2}} (6 1)
nil {(4 3) #{1 2}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (5 4) #{2}, (3 4) #{1 2}, (4 2) #{2}, (5 3) #{2}, (4 1) #{2}, (5 2) #{2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (5 1) #{2}, (6 1) #{2}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1 2}, (2 6) #{1}, (3 5) #{1}, (3 2) #{2}} (6 2)
nil {(4 3) #{1 2}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (5 4) #{2}, (3 4) #{1 2}, (4 2) #{2}, (5 3) #{2}, (4 1) #{2}, (5 2) #{2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (5 1) #{2}, (6 1) #{2}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1 2}, (2 6) #{1}, (6 2) #{2}, (3 5) #{1}, (3 2) #{2}} (6 3)
nil {(4 3) #{1 2}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (5 4) #{2}, (6 3) #{2}, (3 4) #{1 2}, (4 2) #{2}, (5 3) #{2}, (4 1) #{2}, (5 2) #{2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (5 1) #{2}, (6 1) #{2}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1 2}, (2 6) #{1}, (6 2) #{2}, (3 5) #{1}, (3 2) #{2}} (6 4)
3 ((5 5) (5 6) (6 5) (6 6)) () {(4 3) #{1 2}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (5 4) #{2}, (6 3) #{2}, (3 4) #{1 2}, (4 2) #{2}, (5 3) #{2}, (4 1) #{2}, (5 2) #{2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (6 4) #{2}, (5 1) #{2}, (6 1) #{2}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1 2}, (2 6) #{1}, (6 2) #{2}, (3 5) #{1}, (3 2) #{2}}
{(4 3) #{1 2},
 (2 3) #{1},
 (2 5) #{1},
 (3 3) #{1 2},
 (5 4) #{2},
 (6 3) #{2},
 (3 4) #{1 2},
 (4 2) #{2},
 (5 3) #{2},
 (4 1) #{2},
 (5 2) #{2},
 (4 6) #{1},
 (1 4) #{1},
 (1 3) #{1},
 (1 5) #{1},
 (6 4) #{2},
 (5 1) #{2},
 (6 1) #{2},
 (2 4) #{1},
 (3 6) #{1},
 (4 5) #{1},
 (3 1) #{2},
 (1 6) #{1},
 (4 4) #{1 2},
 (2 6) #{1},
 (6 2) #{2},
 (3 5) #{1},
 (3 2) #{2}}
clj꞉aoc2018_3꞉> 
#'aoc2018_3/append-id-to-map-on-matching-coordinate
clj꞉aoc2018_3꞉> 
1 ((1 3) (1 4) (1 5) (1 6) (2 3) (2 4) (2 5) (2 6) (3 3) (3 4) (3 5) (3 6) (4 3) (4 4) (4 5) (4 6)) ({:id 2, :cart ((3 1) (3 2) (3 3) (3 4) (4 1) (4 2) (4 3) (4 4) (5 1) (5 2) (5 3) (5 4) (6 1) (6 2) (6 3) (6 4))} {:id 3, :cart ((5 5) (5 6) (6 5) (6 6))}) {}
2 ((3 1) (3 2) (3 3) (3 4) (4 1) (4 2) (4 3) (4 4) (5 1) (5 2) (5 3) (5 4) (6 1) (6 2) (6 3) (6 4)) ({:id 3, :cart ((5 5) (5 6) (6 5) (6 6))}) {(4 3) #{1}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1}, (3 4) #{1}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (1 6) #{1}, (4 4) #{1}, (2 6) #{1}, (3 5) #{1}}
3 ((5 5) (5 6) (6 5) (6 6)) () {(4 3) #{1 2}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (5 4) #{2}, (6 3) #{2}, (3 4) #{1 2}, (4 2) #{2}, (5 3) #{2}, (4 1) #{2}, (5 2) #{2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (6 4) #{2}, (5 1) #{2}, (6 1) #{2}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1 2}, (2 6) #{1}, (6 2) #{2}, (3 5) #{1}, (3 2) #{2}}
{(4 3) #{1 2},
 (2 3) #{1},
 (2 5) #{1},
 (3 3) #{1 2},
 (5 4) #{2},
 (6 3) #{2},
 (3 4) #{1 2},
 (4 2) #{2},
 (5 3) #{2},
 (4 1) #{2},
 (5 2) #{2},
 (4 6) #{1},
 (1 4) #{1},
 (1 3) #{1},
 (1 5) #{1},
 (6 4) #{2},
 (5 1) #{2},
 (6 1) #{2},
 (2 4) #{1},
 (3 6) #{1},
 (4 5) #{1},
 (3 1) #{2},
 (1 6) #{1},
 (4 4) #{1 2},
 (2 6) #{1},
 (6 2) #{2},
 (3 5) #{1},
 (3 2) #{2}}
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Syntax error compiling at (src/aoc2018_3.clj:79:10).
; Unable to resolve symbol: get-id-list-map-on-matching-coordinate in this context
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
nil
clj꞉aoc2018_3꞉> 
#'aoc2018_3/part1-solution
clj꞉aoc2018_3꞉> 
; Error printing return value (ClassCastException) at clojure.lang.APersistentMap$ValSeq/first (APersistentMap.java:236).
; class clojure.lang.LazySeq cannot be cast to class java.util.Map$Entry (clojure.lang.LazySeq is in unnamed module of loader 'app'; java.util.Map$Entry is in module java.base of loader 'bootstrap')
clj꞉aoc2018_3꞉> 
#'aoc2018_3/part1-solution
clj꞉aoc2018_3꞉> 
(#{1 2}
 #{1}
 #{1}
 #{1 2}
 #{2}
 #{2}
 #{1 2}
 #{2}
 #{2}
 #{2}
 #{2}
 #{1}
 #{1}
 #{1}
 #{1}
 #{2}
 #{2}
 #{2}
 #{1}
 #{1}
 #{1}
 #{2}
 #{1}
 #{1 2}
 #{1}
 #{2}
 #{1}
 #{2})
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
#'aoc2018_3/part1-solution
clj꞉aoc2018_3꞉> 
4
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
#'aoc2018_3/part1-solution
clj꞉aoc2018_3꞉> 
4
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
#'aoc2018_3/part2-solution
clj꞉aoc2018_3꞉> 
; Execution error (ClassCastException) at aoc2018-3/part2-solution (REPL:114).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IPersistentSet (clojure.lang.LazySeq and clojure.lang.IPersistentSet are in unnamed module of loader 'app')
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
nil
clj꞉aoc2018_3꞉> 
; Execution error (ClassCastException) at aoc2018-3/part2-solution (aoc2018_3.clj:114).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IPersistentSet (clojure.lang.LazySeq and clojure.lang.IPersistentSet are in unnamed module of loader 'app')
clj꞉aoc2018_3꞉> 
#'aoc2018_3/part2-solution
clj꞉aoc2018_3꞉> 
#{1 2}
clj꞉aoc2018_3꞉> 
#'aoc2018_3/part2-solution
clj꞉aoc2018_3꞉> 
; Execution error (ClassCastException) at aoc2018-3/part2-solution (REPL:114).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉aoc2018_3꞉> 
#'aoc2018_3/part2-solution
clj꞉aoc2018_3꞉> 
#{3}
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
nil
clj꞉aoc2018_3꞉> 
110063
clj꞉aoc2018_3꞉> 
#{894 1287}
clj꞉aoc2018_3꞉> 
#{894 1287}
clj꞉aoc2018_3꞉> 
110063
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
#{3}
clj꞉aoc2018_3꞉> 
4
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
nil
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
4
clj꞉aoc2018_3꞉> 
#{3}
clj꞉aoc2018_3꞉> 
110063
clj꞉aoc2018_3꞉> 
110063
clj꞉aoc2018_3꞉> 
#{894 1287}
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
nil
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
#'aoc2018_3/get-id-list-map-on-matching-coordinate
clj꞉aoc2018_3꞉> 
110195
clj꞉aoc2018_3꞉> 
#{894}
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.0.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; nREPL Connection was closed
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; Evaluating file: aoc2018_1.clj
nil
clj꞉aoc2018-1꞉> 
; Evaluating file: aoc2018_1.clj
nil
clj꞉aoc2018-1꞉> 
10
clj꞉aoc2018-1꞉> 
; Running tests for aoc2018-1...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018-1꞉> 
439
clj꞉aoc2018-1꞉> 
; Execution error (NullPointerException) at aoc2018-1/find-earliest-2nd-occurrence-sum-value (aoc2018_1.clj:50).
; Cannot invoke "Object.getClass()" because "x" is null
clj꞉aoc2018-1꞉> 
; Running tests for aoc2018-1...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018-1꞉> 
; Running tests for aoc2018-2...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018-2꞉> 
; Running tests for aoc2018-2...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018-2꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
; Syntax error macroexpanding clojure.core/ns at (src/aoc2018_3.clj:1:1).
; ((:require [clojure.set :as set clojure.string :as string clojure.math.combinatorics :as combo])) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file aoc2018_3.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉aoc2018_3꞉> 
; Syntax error compiling at (src/aoc2018_3.clj:148:3).
; Unable to resolve symbol: part1-solution in this context
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
; Syntax error macroexpanding clojure.core/ns at (src/aoc2018_3.clj:1:1).
; ((:require [clojure.set :as set clojure.string :as string clojure.math.combinatorics :as combo])) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file aoc2018_3.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
; Syntax error macroexpanding clojure.core/ns at (src/aoc2018_3.clj:1:1).
; ((:require [clojure.set :as set clojure.string :as string clojure.math.combinatorics :as combo])) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file aoc2018_3.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
nil
clj꞉aoc2018_3꞉> 
4
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
#'aoc2018_3/part1-solution
clj꞉aoc2018_3꞉> 
{(4 3) #{1 2}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (5 4) #{2}, (6 3) #{2}, (3 4) #{1 2}, (4 2) #{2}, (6 6) #{3}, (5 3) #{2}, (6 5) #{3}, (4 1) #{2}, (5 2) #{2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (6 4) #{2}, (5 1) #{2}, (6 1) #{2}, (5 6) #{3}, (5 5) #{3}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1 2}, (2 6) #{1}, (6 2) #{2}, (3 5) #{1}, (3 2) #{2}}
0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
#'aoc2018_3/part1-solution
clj꞉aoc2018_3꞉> 
; Execution error (IllegalArgumentException) at aoc2018-3/part1-solution (REPL:106).
; Don't know how to create ISeq from: aoc2018_3$part1_solution$fn__8687
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
#'aoc2018_3/part1-solution
clj꞉aoc2018_3꞉> 
({:id 1, :cart ((1 3) (1 4) (1 5) (1 6) (2 3) (2 4) (2 5) (2 6) (3 3) (3 4) (3 5) (3 6) (4 3) (4 4) (4 5) (4 6))} {:id 2, :cart ((3 1) (3 2) (3 3) (3 4) (4 1) (4 2) (4 3) (4 4) (5 1) (5 2) (5 3) (5 4) (6 1) (6 2) (6 3) (6 4))} {:id 3, :cart ((5 5) (5 6) (6 5) (6 6))}) {(4 3) #{1 2}, (2 3) #{1}, (2 5) #{1}, (3 3) #{1 2}, (5 4) #{2}, (6 3) #{2}, (3 4) #{1 2}, (4 2) #{2}, (6 6) #{3}, (5 3) #{2}, (6 5) #{3}, (4 1) #{2}, (5 2) #{2}, (4 6) #{1}, (1 4) #{1}, (1 3) #{1}, (1 5) #{1}, (6 4) #{2}, (5 1) #{2}, (6 1) #{2}, (5 6) #{3}, (5 5) #{3}, (2 4) #{1}, (3 6) #{1}, (4 5) #{1}, (3 1) #{2}, (1 6) #{1}, (4 4) #{1 2}, (2 6) #{1}, (6 2) #{2}, (3 5) #{1}, (3 2) #{2}}
0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Syntax error compiling at (src/aoc2018_3.clj:113:10).
; Unable to resolve symbol: merge-coordinate-id-set in this context
clj꞉aoc2018_3꞉> 
; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.0.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; nREPL Connection was closed
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; Evaluating file: aoc2018_3.clj
; Syntax error macroexpanding clojure.core/ns at (src/aoc2018_3.clj:1:1).
; ((:require [clojure.set :as set clojure.string :as string clojure.math.combinatorics :as combo])) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
; Evaluation of file aoc2018_3.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Syntax error compiling at (src/aoc2018_3.clj:155:3).
; Unable to resolve symbol: part1-solution in this context
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
nil
clj꞉aoc2018_3꞉> 
#'aoc2018_3/part1-solution
clj꞉aoc2018_3꞉> 
4
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
nil
clj꞉aoc2018_3꞉> 
4
clj꞉aoc2018_3꞉> 
; Execution error (ClassCastException) at aoc2018-3/part2-solution (aoc2018_3.clj:130).
; class clojure.lang.PersistentArrayMap cannot be cast to class java.util.Map$Entry (clojure.lang.PersistentArrayMap is in unnamed module of loader 'app'; java.util.Map$Entry is in module java.base of loader 'bootstrap')
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Evaluating file: aoc2018_3.clj
nil
clj꞉aoc2018_3꞉> 
4
clj꞉aoc2018_3꞉> 
#{3}
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018_3...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018_3꞉> 
; Running tests for aoc2018-1...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018-1꞉> 
; Running tests for aoc2018-1...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018-1꞉> 
; Running tests for aoc2018-1...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018-1꞉> 
; Running tests for aoc2018-1...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018-1꞉> 
; Running tests for aoc2018-1...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018-1꞉> 
; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.0.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; nREPL Connection was closed
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; Evaluating file: aoc2018_1.clj
nil
clj꞉aoc2018-1꞉> 
; Execution error (NullPointerException) at aoc2018-1/find-earliest-2nd-occurrence-sum-value (aoc2018_1.clj:42).
; Cannot invoke "Object.getClass()" because "x" is null
clj꞉aoc2018-1꞉> 
#'aoc2018-1/find-earliest-2nd-occurrence-sum-value
clj꞉aoc2018-1꞉> 
; Execution error (NullPointerException) at aoc2018-1/find-earliest-2nd-occurrence-sum-value (REPL:42).
; Cannot invoke "Object.getClass()" because "x" is null
clj꞉aoc2018-1꞉> 
#'aoc2018-1/part2-solution
clj꞉aoc2018-1꞉> 
; Execution error (NullPointerException) at aoc2018-1/find-earliest-2nd-occurrence-sum-value (REPL:42).
; Cannot invoke "Object.getClass()" because "x" is null
clj꞉aoc2018-1꞉> 
10
clj꞉aoc2018-1꞉> 
; Running tests for aoc2018-1...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018-1꞉> 
; Running tests for aoc2018-1...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018-1꞉> 
#'aoc2018-1/find-earliest-2nd-occurrence-sum-value
clj꞉aoc2018-1꞉> 
; Running tests for aoc2018-1...
; No tests found. 😱, ns: 0, vars: 0
clj꞉aoc2018-1꞉> 
{:key "value"}
clj꞉aoc2018-1꞉> 
10
clj꞉aoc2018-1꞉> 
10
clj꞉aoc2018-1꞉> 
